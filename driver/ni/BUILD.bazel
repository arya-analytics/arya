config_setting(
    name = "ni_mock",
    values = {"define": "ni_mock=true"}
)

# cc_library(
#     name = "daqmx_hds",
#     hdrs = ["daqmx.h"],
#     visibility = ["//visibility:public"],
#     deps = ["@nidaqmx"],
# )

# cc_library(
#     name = "syscfg_hds",
#     hdrs = [
#         "nisyscfg.h",
#         "nisyscfg_errors.h",
#         "nisyscfg_wide.h",
#     ],
#     visibility = ["//visibility:public"],
#     deps = [
#         "@nidaqmx",
#         "@nisyscfg",
#     ],
# )


cc_library(
    name = "daqmx",
    srcs = select({
        "//conditions:default": ["nidaqmx_prod.cpp"],
        ":ni_mock": ["nidaqmx_mock.cpp"],
    }),
    hdrs = [
        "nidaqmx_api.h",
        "daqmx.h"
    ],

    visibility = ["//visibility:public"],
    deps =  select({
        "//conditions:default": ["@nidaqmx"],
        ":ni_mock": [],
    }),
)


cc_library(
    name = "ni",
    srcs = [
        "reader.cpp",
        "task.cpp",
        "factory.cpp",
        # "scanner.cpp" 
    ],
    hdrs = [
        "ni.h",
        "daqmx.h",
        "nisyscfg.h",
        "nisyscfg_errors.h",
        "nisyscfg_wide.h",
        "//driver/task",
        "//driver/pipeline",
        "//client/cpp:synnax",

    ],
    copts = ["/std:c++20"],
    linkopts = ["user32.lib"],
    target_compatible_with = select({
        "@platforms//os:windows": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    visibility = ["//visibility:public"],
    deps = [
        "daqmx",
        # "syscfg_hds",
        "//driver/breaker",
        "//driver/errors",
        "//driver/pipeline:daqReader",
        "//client/cpp:synnax",
        "//driver/config",
        "//driver/task",
        "@nlohmann_json//:json",
    ],
)


cc_test(
    name = "reader_test",
    srcs = [
        "reader_test.cpp",
    ],
    copts = ["/std:c++20"],
    deps = [
        "ni",
        "//driver/testutil",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "writer_test",
    srcs = [
        "writer_test.cpp",
    ],
    copts = ["/std:c++20"],
    deps = [
        "ni",
        "//driver/testutil",
        "@com_google_googletest//:gtest_main",
    ],
)


# cc_test(
#     name = "scanner_test",
#     srcs = [
#         "scanner_test.cpp",
#     ],
#     deps = [
#         "ni",
#         "@com_google_googletest//:gtest_main",
#         "//driver/testutil",
#     ],
#     copts = ["/std:c++20"],
# )

cc_test(
    name = "task_test",
    srcs = [
        "task_test.cpp",
    ],
    deps = [
        "ni",
        "@com_google_googletest//:gtest_main",
        "//driver/testutil",
    ],
    copts = ["/std:c++20"],
)