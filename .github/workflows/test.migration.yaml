name: "Test - Migration"
on:
  pull_request:
    branches:
      - rc
      - main
  push:
    branches:
      - rc
      - main
  workflow_dispatch:
permissions:
  contents: write
  packages: write
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.filter.outputs.changed }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Diff Changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            changed:
                - "client/**"
                - "freighter/py/**"
                - "synnax/**"
                - "cesium/**"
                - "aspen/**"
                - "x/**"
                - "freighter/**"
                - ".github/workflows/test.client.yaml"

  build-server:
    needs: setup
    runs-on: ubuntu-latest
    env:
      GITHUB_SHA: ${{ github.sha }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Latest Earthly
        uses: earthly/actions-setup@v1

      - name: Build Image
        run: earthly --push +docker -tag=${GITHUB_SHA} -driver=false
        working-directory: ./synnax

      - name: Push to Github Container Registry
        run: docker push ghcr.io/synnaxlabs/synnax:${GITHUB_SHA}

  test-python:
    needs: [setup, build-server]
    runs-on: ubuntu-latest
    services:
      synnax:
        image: ghcr.io/synnaxlabs/synnax:${{ github.sha }}
        env:
          SYNNAX_LISTEN: localhost:9090
          SYNNAX_VERBOSE: true
          SYNNAX_INSECURE: true
          SYNNAX_MEM: true
          SYNNAX_LICENSE_KEY: ${{ secrets.SYNNAX_LICENSE_KEY }}
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 9090:9090
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: |
          pip install poetry
          poetry config virtualenvs.create false
          poetry install
        working-directory: ./client/py

      - name: Test Current Branch
        run: pytest
        working-directory: ./client/py

      - name: Checkout Main Branch
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Install Poetry (Main)
        run: |
          poetry install
        working-directory: ./client/py

      - name: Test Main Branch
        run: pytest
        working-directory: ./client/py