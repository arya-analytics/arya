name: "Test - Migration"
on:
  pull_request:
    branches: [rc, main]
  push:
    branches: [rc, main]
  workflow_dispatch:
permissions:
  contents: write
  packages: write
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.filter.outputs.changed }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Diff Changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            changed:
              - "client/**"
              - "freighter/**"
              - "synnax/**"
              - "cesium/**"
              - "aspen/**"
              - "x/**"
              - ".github/workflows/test.client.yaml"

  build-and-test:
    needs: setup
    runs-on: ubuntu-latest
    # if: needs.setup.outputs.changed == 'true'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Latest Earthly
        uses: earthly/actions-setup@v1

      - name: Build Main Server
        run: |
          git checkout main
          earthly --push +docker -tag=main-${GITHUB_SHA} -driver=false
          docker push ghcr.io/synnaxlabs/synnax:main-${GITHUB_SHA}
        working-directory: ./synnax

      - name: Build Current Branch Server
        run: |
          git checkout ${{ github.ref }}
          earthly --push +docker -tag=${GITHUB_SHA} -driver=false
          docker push ghcr.io/synnaxlabs/synnax:${GITHUB_SHA}
        working-directory: ./synnax

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: |
          pip install poetry
          poetry config virtualenvs.create false
          poetry install
        working-directory: ./client/py

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install TypeScript Dependencies
        run: pnpm i

      - name: Setup Bazel
        uses: bazel-contrib/setup-bazel@0.8.1
        with:
          bazelisk-cache: true
          disk-cache: ${{ github.workflow }}
          repository-cache: true

      - name: Test with Main Server
        env:
          SYNNAX_IMAGE: ghcr.io/synnaxlabs/synnax:main-${GITHUB_SHA}
        run: |
          docker run -d --name synnax-main -p 9090:9090 \
            -e SYNNAX_LISTEN=0.0.0.0:9090 \
            -e SYNNAX_VERBOSE=true \
            -e SYNNAX_INSECURE=true \
            -e SYNNAX_MEM=true \
            -e SYNNAX_LICENSE_KEY=${{ secrets.SYNNAX_LICENSE_KEY }} \
            $SYNNAX_IMAGE
          
          # Run Python tests
          cd ./client/py && pytest
          
          # Run TypeScript tests
          pnpm cov:client
          
          # Run C++ tests
          bazel test --test_output=all //client/...
          
          docker stop synnax-main

      - name: Test with Current Branch Server
        env:
          SYNNAX_IMAGE: ghcr.io/synnaxlabs/synnax:${GITHUB_SHA}
        run: |
          docker run -d --name synnax-current -p 9090:9090 \
            -e SYNNAX_LISTEN=0.0.0.0:9090 \
            -e SYNNAX_VERBOSE=true \
            -e SYNNAX_INSECURE=true \
            -e SYNNAX_MEM=true \
            -e SYNNAX_LICENSE_KEY=${{ secrets.SYNNAX_LICENSE_KEY }} \
            $SYNNAX_IMAGE
          
          # Run Python tests
          cd ./client/py && pytest
          
          # Run TypeScript tests
          pnpm cov:client
          
          # Run C++ tests
          bazel test --test_output=all //client/...
          
          docker stop synnax-current
