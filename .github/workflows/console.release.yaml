name: "Console Release"
on:
  push:
  workflow_dispatch:
permissions:
  contents: write
jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Diff Changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            changed:
              - "console/package.json"

      - name: Setup Node
        if: steps.filter.outputs.changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Get Version
        if: steps.filter.outputs.changed == 'true'
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
        working-directory: ./console

      - name: Create Release
        if: steps.filter.outputs.changed == 'true'
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const { data: { id } }  = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `console-v${process.env.PACKAGE_VERSION}`,
              name: `Synnax Console v${process.env.PACKAGE_VERSION}`,
              draft: false,
              prerelease: false,
            })
            return id

  build-electron:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [ macos-12, ubuntu-latest, windows-latest ]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

     - name: Set GH_TOKEN environment variable
        shell: bash
        run: echo "GH_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
        if: matrix.platform == 'ubuntu-latest' || matrix.platform == 'macos-12'

      - name: Set GH_TOKEN environment variable
        shell: cmd
        run: echo GH_TOKEN=${{ secrets.GITHUB_TOKEN }}>> %GITHUB_ENV%
        if: matrix.platform == 'windows-latest'

      - name: Diff Changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            changed:
              - "console/**"
              - "pluto/**"
              - "client/ts/**"
              - "freighter/ts/**"
              - ".github/workflows/console.release.yaml"

      - name: Setup pnpm
        if: steps.filter.outputs.changed == 'true'
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Setup Node
        if: steps.filter.outputs.changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install Dependencies
        if: steps.filter.outputs.changed == 'true'
        run: pnpm i

      - name: Build
        if: steps.filter.outputs.changed == 'true'
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: pnpm build:console

      - name: Release
        if: steps.filter.outputs.changed == 'true'
        working-directory: ./console
        run: pnpm release
        