name: Publish PyPI Packages

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Update packages with correct versions
        run: |
          cd ./client/py
          poetry version patch
          CLIENT_VERSION=$(poetry version -s)
          cd ../../freighter/py
          poetry version patch
          FREIGHTER_VERSION=$(poetry version -s)
          cd ../../alamos/py
          poetry version patch
          ALAMOS_VERSION=$(poetry version -s)
          cd ../../client/py
          sed -i -E "/^\[tool\.poetry\.dependencies\]$/,/^\[.*\]$/ s/synnax-freighter = .*/synnax-freighter = \"^$FREIGHTER_VERSION\"/" pyproject.toml
          sed -i -E "/^\[tool\.poetry\.dependencies\]$/,/^\[.*\]$/ s/alamos = .*/alamos = \"^$ALAMOS_VERSION\"/" pyproject.toml
          cd ../../freighter/py
          sed -i -E "/^\[tool\.poetry\.dependencies\]$/,/^\[.*\]$/ s/alamos = .*/alamos = \"^$ALAMOS_VERSION\"/" pyproject.toml

          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}

          cd ../../alamos/py
          echo "Updating alamos version to $ALAMOS_VERSION"
          echo "Locking alamos dependencies"
          poetry lock -n
          echo "Installing alamos dependencies"
          poetry install -n
          echo "Publishing alamos"
          poetry publish --build --no-interaction

          cd ../../freighter/py
          echo "Updating freighter version to $FREIGHTER_VERSION"
          # poll until the new version of alamos is available
          while true; do
            echo "Locking freighter dependencies"
            # wait until this command exits with 0
            poetry lock -n && break
            poetry cache clear --all -n .
            echo "Failed to lock dependencies, retrying in 1 seconds"
            sleep 1
          done
          poetry install -n
          echo "Publishing freighter"
          poetry publish --build --no-interaction

          cd ../../client/py
          echo "Updating client version to $CLIENT_VERSION"
          # poll until the new version of freighter is available
          while true; do
            echo "Locking client dependencies"
            # wait until this command exits with 0
            poetry lock -n && break
            poetry cache clear --all -n .
            echo "Failed to lock dependencies, retrying in 1 seconds"
            sleep 1
          done
          poetry install -n
          echo "Publishing client"
          poetry publish --build --no-interaction 

          # put back the original relative paths (set develop = true)
          cd ../../client/py
          sed -i -E "/^\[tool\.poetry\.dependencies\]$/,/^\[.*\]$/ s/synnax-freighter = .*/synnax-freighter = { path = \"..\/..\/freighter\/py\", develop = true }/" pyproject.toml
          sed -i -E "/^\[tool\.poetry\.dependencies\]$/,/^\[.*\]$/ s/alamos = .*/alamos = { path = \"..\/..\/alamos\/py\", develop = true }/" pyproject.toml
          
          cd ../../freighter/py
          sed -i -E "/^\[tool\.poetry\.dependencies\]$/,/^\[.*\]$/ s/alamos = .*/alamos = { path = \"..\/..\/alamos\/py\", develop = true }/" pyproject.toml

      - name: Commit and push changes
        uses: EndBug/add-and-commit@v9
        with:
          add: "client/py/pyproject.toml freighter/py/pyproject.toml alamos/py/pyproject.toml"
          message: "Update dependencies"
          pull: "--commit --no-edit"
          push: "origin ${{ github.ref }} --force"











