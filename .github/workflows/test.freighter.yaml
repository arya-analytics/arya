name: "Test: Freighter"

on:
  pull_request:
    branches:
      - rc
      - main
  push:
    branches:
      - rc
      - main
      - sy-1375-run-ci-tests-on-windows-and-macos
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      go: ${{ steps.filter.outputs.go }}
      integration: ${{ steps.filter.outputs.integration }}
      cpp: ${{ steps.filter.outputs.cpp }}
      py: ${{ steps.filter.outputs.py }}
      ts: ${{ steps.filter.outputs.ts }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Diff Changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            shared: &shared
              - .github/workflows/test.freighter.yaml

            go: &go
              - *shared
              - alamos/go/**
              - freighter/go/**
              - x/go/**

            integration: &integration
              - *go
              - freighter/integration/**
              - x/go/**

            py:
              - *shared
              - *integration
              - alamos/py/**
              - freighter/py/**

            ts:
              - *shared
              - *integration
              - alamos/ts/**
              - freighter/ts/**
              - configs/eslint/**
              - configs/stylelint/**
              - configs/ts/**
              - configs/vite/**
              - x/ts/**

            cpp:
              - *shared
              - freighter/cpp/**

  # go:
  #   name: Go (${{ matrix.os }})
  #   needs: setup
  #   if: needs.setup.outputs.go == 'true'
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest, macos-latest]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4

  #     - name: Set up Go
  #       uses: actions/setup-go@v5
  #       with:
  #         go-version-file: go.work
  #         cache-dependency-path: |
  #           alamos/go/go.sum
  #           freighter/go/go.sum
  #           x/go/go.sum

  #     - name: Test
  #       run: go test -v -shuffle=on ./...
  #       working-directory: freighter/go

  # integration:
  #   runs-on: ubuntu-latest
  #   needs: setup
  #   if: needs.setup.outputs.integration == 'true'
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4

  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Download Earhly
  #       uses: earthly/actions-setup@v1

  #     - name: Build Image
  #       run: earthly --push +docker
  #       working-directory: ./freighter/integration

  py:
    name: Python
    needs: setup #TODO: add back integration
    if: needs.setup.outputs.py == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: freighter/py/pyproject.toml
          cache: poetry

      - name: Install Dependencies
        run: poetry install
        working-directory: ./freighter/py

      - name: Test
        run: poetry run pytest
        working-directory: ./freighter/py

    services:
      integration:
        image: ghcr.io/synnaxlabs/freighter-go-integration:latest
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 8080:8080

  # ts:
  #   name: TypeScript
  #   needs: [setup, integration]
  #   if: needs.setup.outputs.ts == 'true'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4

  #     - name: Set up pnpm
  #       uses: pnpm/action-setup@v4

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version-file: package.json
  #         cache: pnpm
  #         cache-dependency-path: pnpm-lock.yaml

  #     - name: Install Dependencies
  #       run: pnpm install

  #     - name: Build
  #       run: pnpm build:freighter

  #     - name: Test
  #       run: pnpm test:freighter

  #     - name: Lint
  #       run: pnpm lint:freighter

  #   services:
  #     integration:
  #       image: ghcr.io/synnaxlabs/freighter-go-integration:latest
  #       credentials:
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #       ports:
  #         - 8080:8080

  # cpp:
  #   name: C++ (${{ matrix.os }})
  #   needs: setup
  #   if: needs.setup.outputs.cpp == 'true'
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, macos-latest, windows-latest]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4

  #     - name: Setup Bazel
  #       uses: bazel-contrib/setup-bazel@0.8.1
  #       with:
  #         bazelisk-cache: true
  #         disk-cache: ${{ github.workflow }}
  #         repository-cache: true

  #     - name: Test
  #       run: bazel test //freighter/cpp:freighter_test
