---
import { Align, Text } from "@synnaxlabs/pluto";
const { date, version, title, breakingChanges } = Astro.props;
const id = version.split(".").join("-");
---

<Align.Space direction="x" id={version.split(".").join("-")} className="release" empty>
    <Align.Space direction="y" size="small" className="meta">
        <Text.Text level="h3" weight={500}>Version {version}</Text.Text>
        <Text.Text level="p" shade={8}>{date}</Text.Text>
        {
            breakingChanges ? (
                <Text.Text className="breaking-changes" level="small">
                    Breaking Changes
                </Text.Text>
            ) : (
                <Text.Text className="no-breaking-changes" level="small">
                    No Breaking Changes
                </Text.Text>
            )
        }
    </Align.Space>
    <Align.Space direction="y" className="details" size="large">
        <Text.Text level="h2" className="title">{title}</Text.Text>
        <Align.Space direction="y">
            <slot />
        </Align.Space>
    </Align.Space>
</Align.Space>

<style is:global>
    .release {
        padding: 5rem 0rem;
        max-width: 1200px;
        position: relative;
        margin: 0 auto;
        .meta {
            height: fit-content;
            position: sticky;
            top: 120px;
            padding-top: 1rem;
            padding-left: 3rem;
            flex-basis: 375px;
            flex-grow: 1;
        }
        .details {
            flex-basis: 650px;
            flex-grow: 3;
        }
        .breaking-changes {
            color: var(--pluto-error-z);
        }
        .no-breaking-changes {
            color: var(--pluto-success-z);
        }
    }
    @media (max-width: 750px) {
        .release {
            flex-direction: column !important;
            .meta {
                position: unset;
                flex-basis: fit-content;
                padding-left: 0;
                padding-bottom: 4rem;
            }
        }
    }
</style>
