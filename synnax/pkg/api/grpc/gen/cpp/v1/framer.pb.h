// Copyright 2023 Synnax Labs, Inc.
//
// Use of this software is governed by the Business Source License included in the file
// licenses/BSL.txt.
//
// As of the Change Date specified in that file, in accordance with the Business Source
// License, use of this software will be governed by the Apache License, Version 2.0,
// included in the file licenses/APL.txt.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v1/framer.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_v1_2fframer_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_v1_2fframer_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "ferrors/v1/ferrors.pb.h"
#include "telempb/telem.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_v1_2fframer_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_v1_2fframer_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_v1_2fframer_2eproto;
namespace api {
namespace v1 {
class Frame;
struct FrameDefaultTypeInternal;
extern FrameDefaultTypeInternal _Frame_default_instance_;
class FrameIteratorRequest;
struct FrameIteratorRequestDefaultTypeInternal;
extern FrameIteratorRequestDefaultTypeInternal _FrameIteratorRequest_default_instance_;
class FrameIteratorResponse;
struct FrameIteratorResponseDefaultTypeInternal;
extern FrameIteratorResponseDefaultTypeInternal _FrameIteratorResponse_default_instance_;
class FrameStreamerRequest;
struct FrameStreamerRequestDefaultTypeInternal;
extern FrameStreamerRequestDefaultTypeInternal _FrameStreamerRequest_default_instance_;
class FrameStreamerResponse;
struct FrameStreamerResponseDefaultTypeInternal;
extern FrameStreamerResponseDefaultTypeInternal _FrameStreamerResponse_default_instance_;
class FrameWriterConfig;
struct FrameWriterConfigDefaultTypeInternal;
extern FrameWriterConfigDefaultTypeInternal _FrameWriterConfig_default_instance_;
class FrameWriterRequest;
struct FrameWriterRequestDefaultTypeInternal;
extern FrameWriterRequestDefaultTypeInternal _FrameWriterRequest_default_instance_;
class FrameWriterResponse;
struct FrameWriterResponseDefaultTypeInternal;
extern FrameWriterResponseDefaultTypeInternal _FrameWriterResponse_default_instance_;
}  // namespace v1
}  // namespace api
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace api {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class Frame final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.v1.Frame) */ {
 public:
  inline Frame() : Frame(nullptr) {}
  ~Frame() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Frame(::google::protobuf::internal::ConstantInitialized);

  Frame(const Frame& from);
  Frame(Frame&& from) noexcept
    : Frame() {
    *this = ::std::move(from);
  }

  inline Frame& operator=(const Frame& from) {
    CopyFrom(from);
    return *this;
  }
  inline Frame& operator=(Frame&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Frame& default_instance() {
    return *internal_default_instance();
  }
  static inline const Frame* internal_default_instance() {
    return reinterpret_cast<const Frame*>(
               &_Frame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Frame& a, Frame& b) {
    a.Swap(&b);
  }
  inline void Swap(Frame* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Frame* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Frame* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Frame>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Frame& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Frame& from) {
    Frame::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Frame* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "api.v1.Frame";
  }
  protected:
  explicit Frame(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeysFieldNumber = 1,
    kSeriesFieldNumber = 2,
  };
  // repeated uint32 keys = 1 [json_name = "keys"];
  int keys_size() const;
  private:
  int _internal_keys_size() const;

  public:
  void clear_keys() ;
  ::uint32_t keys(int index) const;
  void set_keys(int index, ::uint32_t value);
  void add_keys(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& keys() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_keys();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_keys() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_keys();

  public:
  // repeated .telem.Series series = 2 [json_name = "series"];
  int series_size() const;
  private:
  int _internal_series_size() const;

  public:
  void clear_series() ;
  ::telem::Series* mutable_series(int index);
  ::google::protobuf::RepeatedPtrField< ::telem::Series >*
      mutable_series();
  private:
  const ::google::protobuf::RepeatedPtrField<::telem::Series>& _internal_series() const;
  ::google::protobuf::RepeatedPtrField<::telem::Series>* _internal_mutable_series();
  public:
  const ::telem::Series& series(int index) const;
  ::telem::Series* add_series();
  const ::google::protobuf::RepeatedPtrField< ::telem::Series >&
      series() const;
  // @@protoc_insertion_point(class_scope:api.v1.Frame)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<::uint32_t> keys_;
    mutable ::google::protobuf::internal::CachedSize _keys_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField< ::telem::Series > series_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_v1_2fframer_2eproto;
};// -------------------------------------------------------------------

class FrameIteratorRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.v1.FrameIteratorRequest) */ {
 public:
  inline FrameIteratorRequest() : FrameIteratorRequest(nullptr) {}
  ~FrameIteratorRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FrameIteratorRequest(::google::protobuf::internal::ConstantInitialized);

  FrameIteratorRequest(const FrameIteratorRequest& from);
  FrameIteratorRequest(FrameIteratorRequest&& from) noexcept
    : FrameIteratorRequest() {
    *this = ::std::move(from);
  }

  inline FrameIteratorRequest& operator=(const FrameIteratorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FrameIteratorRequest& operator=(FrameIteratorRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FrameIteratorRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FrameIteratorRequest* internal_default_instance() {
    return reinterpret_cast<const FrameIteratorRequest*>(
               &_FrameIteratorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(FrameIteratorRequest& a, FrameIteratorRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(FrameIteratorRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FrameIteratorRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FrameIteratorRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FrameIteratorRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FrameIteratorRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FrameIteratorRequest& from) {
    FrameIteratorRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FrameIteratorRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "api.v1.FrameIteratorRequest";
  }
  protected:
  explicit FrameIteratorRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeysFieldNumber = 5,
    kRangeFieldNumber = 3,
    kSpanFieldNumber = 2,
    kStampFieldNumber = 4,
    kCommandFieldNumber = 1,
  };
  // repeated uint32 keys = 5 [json_name = "keys"];
  int keys_size() const;
  private:
  int _internal_keys_size() const;

  public:
  void clear_keys() ;
  ::uint32_t keys(int index) const;
  void set_keys(int index, ::uint32_t value);
  void add_keys(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& keys() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_keys();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_keys() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_keys();

  public:
  // .telem.TimeRange range = 3 [json_name = "range"];
  bool has_range() const;
  void clear_range() ;
  const ::telem::TimeRange& range() const;
  PROTOBUF_NODISCARD ::telem::TimeRange* release_range();
  ::telem::TimeRange* mutable_range();
  void set_allocated_range(::telem::TimeRange* value);
  void unsafe_arena_set_allocated_range(::telem::TimeRange* value);
  ::telem::TimeRange* unsafe_arena_release_range();

  private:
  const ::telem::TimeRange& _internal_range() const;
  ::telem::TimeRange* _internal_mutable_range();

  public:
  // int64 span = 2 [json_name = "span"];
  void clear_span() ;
  ::int64_t span() const;
  void set_span(::int64_t value);

  private:
  ::int64_t _internal_span() const;
  void _internal_set_span(::int64_t value);

  public:
  // int64 stamp = 4 [json_name = "stamp"];
  void clear_stamp() ;
  ::int64_t stamp() const;
  void set_stamp(::int64_t value);

  private:
  ::int64_t _internal_stamp() const;
  void _internal_set_stamp(::int64_t value);

  public:
  // int32 command = 1 [json_name = "command"];
  void clear_command() ;
  ::int32_t command() const;
  void set_command(::int32_t value);

  private:
  ::int32_t _internal_command() const;
  void _internal_set_command(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:api.v1.FrameIteratorRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint32_t> keys_;
    mutable ::google::protobuf::internal::CachedSize _keys_cached_byte_size_;
    ::telem::TimeRange* range_;
    ::int64_t span_;
    ::int64_t stamp_;
    ::int32_t command_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_v1_2fframer_2eproto;
};// -------------------------------------------------------------------

class FrameIteratorResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.v1.FrameIteratorResponse) */ {
 public:
  inline FrameIteratorResponse() : FrameIteratorResponse(nullptr) {}
  ~FrameIteratorResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FrameIteratorResponse(::google::protobuf::internal::ConstantInitialized);

  FrameIteratorResponse(const FrameIteratorResponse& from);
  FrameIteratorResponse(FrameIteratorResponse&& from) noexcept
    : FrameIteratorResponse() {
    *this = ::std::move(from);
  }

  inline FrameIteratorResponse& operator=(const FrameIteratorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FrameIteratorResponse& operator=(FrameIteratorResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FrameIteratorResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FrameIteratorResponse* internal_default_instance() {
    return reinterpret_cast<const FrameIteratorResponse*>(
               &_FrameIteratorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(FrameIteratorResponse& a, FrameIteratorResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(FrameIteratorResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FrameIteratorResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FrameIteratorResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FrameIteratorResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FrameIteratorResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FrameIteratorResponse& from) {
    FrameIteratorResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FrameIteratorResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "api.v1.FrameIteratorResponse";
  }
  protected:
  explicit FrameIteratorResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFrameFieldNumber = 3,
    kErrorFieldNumber = 7,
    kVariantFieldNumber = 1,
    kCommandFieldNumber = 2,
    kAckFieldNumber = 5,
    kSeqNumFieldNumber = 6,
    kNodeKeyFieldNumber = 43,
  };
  // .api.v1.Frame frame = 3 [json_name = "frame"];
  bool has_frame() const;
  void clear_frame() ;
  const ::api::v1::Frame& frame() const;
  PROTOBUF_NODISCARD ::api::v1::Frame* release_frame();
  ::api::v1::Frame* mutable_frame();
  void set_allocated_frame(::api::v1::Frame* value);
  void unsafe_arena_set_allocated_frame(::api::v1::Frame* value);
  ::api::v1::Frame* unsafe_arena_release_frame();

  private:
  const ::api::v1::Frame& _internal_frame() const;
  ::api::v1::Frame* _internal_mutable_frame();

  public:
  // .ferrors.v1.ErrorPayload error = 7 [json_name = "error"];
  bool has_error() const;
  void clear_error() ;
  const ::ferrors::v1::ErrorPayload& error() const;
  PROTOBUF_NODISCARD ::ferrors::v1::ErrorPayload* release_error();
  ::ferrors::v1::ErrorPayload* mutable_error();
  void set_allocated_error(::ferrors::v1::ErrorPayload* value);
  void unsafe_arena_set_allocated_error(::ferrors::v1::ErrorPayload* value);
  ::ferrors::v1::ErrorPayload* unsafe_arena_release_error();

  private:
  const ::ferrors::v1::ErrorPayload& _internal_error() const;
  ::ferrors::v1::ErrorPayload* _internal_mutable_error();

  public:
  // int32 variant = 1 [json_name = "variant"];
  void clear_variant() ;
  ::int32_t variant() const;
  void set_variant(::int32_t value);

  private:
  ::int32_t _internal_variant() const;
  void _internal_set_variant(::int32_t value);

  public:
  // int32 command = 2 [json_name = "command"];
  void clear_command() ;
  ::int32_t command() const;
  void set_command(::int32_t value);

  private:
  ::int32_t _internal_command() const;
  void _internal_set_command(::int32_t value);

  public:
  // bool ack = 5 [json_name = "ack"];
  void clear_ack() ;
  bool ack() const;
  void set_ack(bool value);

  private:
  bool _internal_ack() const;
  void _internal_set_ack(bool value);

  public:
  // int32 seq_num = 6 [json_name = "seqNum"];
  void clear_seq_num() ;
  ::int32_t seq_num() const;
  void set_seq_num(::int32_t value);

  private:
  ::int32_t _internal_seq_num() const;
  void _internal_set_seq_num(::int32_t value);

  public:
  // int32 node_key = 43 [json_name = "nodeKey"];
  void clear_node_key() ;
  ::int32_t node_key() const;
  void set_node_key(::int32_t value);

  private:
  ::int32_t _internal_node_key() const;
  void _internal_set_node_key(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:api.v1.FrameIteratorResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7, 2, 0, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::api::v1::Frame* frame_;
    ::ferrors::v1::ErrorPayload* error_;
    ::int32_t variant_;
    ::int32_t command_;
    bool ack_;
    ::int32_t seq_num_;
    ::int32_t node_key_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_v1_2fframer_2eproto;
};// -------------------------------------------------------------------

class FrameWriterConfig final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.v1.FrameWriterConfig) */ {
 public:
  inline FrameWriterConfig() : FrameWriterConfig(nullptr) {}
  ~FrameWriterConfig() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FrameWriterConfig(::google::protobuf::internal::ConstantInitialized);

  FrameWriterConfig(const FrameWriterConfig& from);
  FrameWriterConfig(FrameWriterConfig&& from) noexcept
    : FrameWriterConfig() {
    *this = ::std::move(from);
  }

  inline FrameWriterConfig& operator=(const FrameWriterConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline FrameWriterConfig& operator=(FrameWriterConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FrameWriterConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const FrameWriterConfig* internal_default_instance() {
    return reinterpret_cast<const FrameWriterConfig*>(
               &_FrameWriterConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(FrameWriterConfig& a, FrameWriterConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(FrameWriterConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FrameWriterConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FrameWriterConfig* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FrameWriterConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FrameWriterConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FrameWriterConfig& from) {
    FrameWriterConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FrameWriterConfig* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "api.v1.FrameWriterConfig";
  }
  protected:
  explicit FrameWriterConfig(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeysFieldNumber = 1,
    kStartFieldNumber = 2,
  };
  // repeated uint32 keys = 1 [json_name = "keys"];
  int keys_size() const;
  private:
  int _internal_keys_size() const;

  public:
  void clear_keys() ;
  ::uint32_t keys(int index) const;
  void set_keys(int index, ::uint32_t value);
  void add_keys(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& keys() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_keys();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_keys() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_keys();

  public:
  // int64 start = 2 [json_name = "start"];
  void clear_start() ;
  ::int64_t start() const;
  void set_start(::int64_t value);

  private:
  ::int64_t _internal_start() const;
  void _internal_set_start(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:api.v1.FrameWriterConfig)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<::uint32_t> keys_;
    mutable ::google::protobuf::internal::CachedSize _keys_cached_byte_size_;
    ::int64_t start_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_v1_2fframer_2eproto;
};// -------------------------------------------------------------------

class FrameWriterRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.v1.FrameWriterRequest) */ {
 public:
  inline FrameWriterRequest() : FrameWriterRequest(nullptr) {}
  ~FrameWriterRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FrameWriterRequest(::google::protobuf::internal::ConstantInitialized);

  FrameWriterRequest(const FrameWriterRequest& from);
  FrameWriterRequest(FrameWriterRequest&& from) noexcept
    : FrameWriterRequest() {
    *this = ::std::move(from);
  }

  inline FrameWriterRequest& operator=(const FrameWriterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FrameWriterRequest& operator=(FrameWriterRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FrameWriterRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FrameWriterRequest* internal_default_instance() {
    return reinterpret_cast<const FrameWriterRequest*>(
               &_FrameWriterRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(FrameWriterRequest& a, FrameWriterRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(FrameWriterRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FrameWriterRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FrameWriterRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FrameWriterRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FrameWriterRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FrameWriterRequest& from) {
    FrameWriterRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FrameWriterRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "api.v1.FrameWriterRequest";
  }
  protected:
  explicit FrameWriterRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigFieldNumber = 2,
    kFrameFieldNumber = 3,
    kCommandFieldNumber = 1,
  };
  // .api.v1.FrameWriterConfig config = 2 [json_name = "config"];
  bool has_config() const;
  void clear_config() ;
  const ::api::v1::FrameWriterConfig& config() const;
  PROTOBUF_NODISCARD ::api::v1::FrameWriterConfig* release_config();
  ::api::v1::FrameWriterConfig* mutable_config();
  void set_allocated_config(::api::v1::FrameWriterConfig* value);
  void unsafe_arena_set_allocated_config(::api::v1::FrameWriterConfig* value);
  ::api::v1::FrameWriterConfig* unsafe_arena_release_config();

  private:
  const ::api::v1::FrameWriterConfig& _internal_config() const;
  ::api::v1::FrameWriterConfig* _internal_mutable_config();

  public:
  // .api.v1.Frame frame = 3 [json_name = "frame"];
  bool has_frame() const;
  void clear_frame() ;
  const ::api::v1::Frame& frame() const;
  PROTOBUF_NODISCARD ::api::v1::Frame* release_frame();
  ::api::v1::Frame* mutable_frame();
  void set_allocated_frame(::api::v1::Frame* value);
  void unsafe_arena_set_allocated_frame(::api::v1::Frame* value);
  ::api::v1::Frame* unsafe_arena_release_frame();

  private:
  const ::api::v1::Frame& _internal_frame() const;
  ::api::v1::Frame* _internal_mutable_frame();

  public:
  // int32 command = 1 [json_name = "command"];
  void clear_command() ;
  ::int32_t command() const;
  void set_command(::int32_t value);

  private:
  ::int32_t _internal_command() const;
  void _internal_set_command(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:api.v1.FrameWriterRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::api::v1::FrameWriterConfig* config_;
    ::api::v1::Frame* frame_;
    ::int32_t command_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_v1_2fframer_2eproto;
};// -------------------------------------------------------------------

class FrameWriterResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.v1.FrameWriterResponse) */ {
 public:
  inline FrameWriterResponse() : FrameWriterResponse(nullptr) {}
  ~FrameWriterResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FrameWriterResponse(::google::protobuf::internal::ConstantInitialized);

  FrameWriterResponse(const FrameWriterResponse& from);
  FrameWriterResponse(FrameWriterResponse&& from) noexcept
    : FrameWriterResponse() {
    *this = ::std::move(from);
  }

  inline FrameWriterResponse& operator=(const FrameWriterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FrameWriterResponse& operator=(FrameWriterResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FrameWriterResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FrameWriterResponse* internal_default_instance() {
    return reinterpret_cast<const FrameWriterResponse*>(
               &_FrameWriterResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(FrameWriterResponse& a, FrameWriterResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(FrameWriterResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FrameWriterResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FrameWriterResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FrameWriterResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FrameWriterResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FrameWriterResponse& from) {
    FrameWriterResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FrameWriterResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "api.v1.FrameWriterResponse";
  }
  protected:
  explicit FrameWriterResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorFieldNumber = 5,
    kCommandFieldNumber = 1,
    kAckFieldNumber = 2,
    kNodeKeyFieldNumber = 3,
    kCounterFieldNumber = 4,
    kEndFieldNumber = 6,
  };
  // .ferrors.v1.ErrorPayload error = 5 [json_name = "error"];
  bool has_error() const;
  void clear_error() ;
  const ::ferrors::v1::ErrorPayload& error() const;
  PROTOBUF_NODISCARD ::ferrors::v1::ErrorPayload* release_error();
  ::ferrors::v1::ErrorPayload* mutable_error();
  void set_allocated_error(::ferrors::v1::ErrorPayload* value);
  void unsafe_arena_set_allocated_error(::ferrors::v1::ErrorPayload* value);
  ::ferrors::v1::ErrorPayload* unsafe_arena_release_error();

  private:
  const ::ferrors::v1::ErrorPayload& _internal_error() const;
  ::ferrors::v1::ErrorPayload* _internal_mutable_error();

  public:
  // int32 command = 1 [json_name = "command"];
  void clear_command() ;
  ::int32_t command() const;
  void set_command(::int32_t value);

  private:
  ::int32_t _internal_command() const;
  void _internal_set_command(::int32_t value);

  public:
  // bool ack = 2 [json_name = "ack"];
  void clear_ack() ;
  bool ack() const;
  void set_ack(bool value);

  private:
  bool _internal_ack() const;
  void _internal_set_ack(bool value);

  public:
  // int32 node_key = 3 [json_name = "nodeKey"];
  void clear_node_key() ;
  ::int32_t node_key() const;
  void set_node_key(::int32_t value);

  private:
  ::int32_t _internal_node_key() const;
  void _internal_set_node_key(::int32_t value);

  public:
  // int32 counter = 4 [json_name = "counter"];
  void clear_counter() ;
  ::int32_t counter() const;
  void set_counter(::int32_t value);

  private:
  ::int32_t _internal_counter() const;
  void _internal_set_counter(::int32_t value);

  public:
  // int64 end = 6 [json_name = "end"];
  void clear_end() ;
  ::int64_t end() const;
  void set_end(::int64_t value);

  private:
  ::int64_t _internal_end() const;
  void _internal_set_end(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:api.v1.FrameWriterResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::ferrors::v1::ErrorPayload* error_;
    ::int32_t command_;
    bool ack_;
    ::int32_t node_key_;
    ::int32_t counter_;
    ::int64_t end_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_v1_2fframer_2eproto;
};// -------------------------------------------------------------------

class FrameStreamerRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.v1.FrameStreamerRequest) */ {
 public:
  inline FrameStreamerRequest() : FrameStreamerRequest(nullptr) {}
  ~FrameStreamerRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FrameStreamerRequest(::google::protobuf::internal::ConstantInitialized);

  FrameStreamerRequest(const FrameStreamerRequest& from);
  FrameStreamerRequest(FrameStreamerRequest&& from) noexcept
    : FrameStreamerRequest() {
    *this = ::std::move(from);
  }

  inline FrameStreamerRequest& operator=(const FrameStreamerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FrameStreamerRequest& operator=(FrameStreamerRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FrameStreamerRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FrameStreamerRequest* internal_default_instance() {
    return reinterpret_cast<const FrameStreamerRequest*>(
               &_FrameStreamerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(FrameStreamerRequest& a, FrameStreamerRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(FrameStreamerRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FrameStreamerRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FrameStreamerRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FrameStreamerRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FrameStreamerRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FrameStreamerRequest& from) {
    FrameStreamerRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FrameStreamerRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "api.v1.FrameStreamerRequest";
  }
  protected:
  explicit FrameStreamerRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeysFieldNumber = 2,
    kStartFieldNumber = 1,
  };
  // repeated uint32 keys = 2 [json_name = "keys"];
  int keys_size() const;
  private:
  int _internal_keys_size() const;

  public:
  void clear_keys() ;
  ::uint32_t keys(int index) const;
  void set_keys(int index, ::uint32_t value);
  void add_keys(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& keys() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_keys();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_keys() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_keys();

  public:
  // int64 start = 1 [json_name = "start"];
  void clear_start() ;
  ::int64_t start() const;
  void set_start(::int64_t value);

  private:
  ::int64_t _internal_start() const;
  void _internal_set_start(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:api.v1.FrameStreamerRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<::uint32_t> keys_;
    mutable ::google::protobuf::internal::CachedSize _keys_cached_byte_size_;
    ::int64_t start_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_v1_2fframer_2eproto;
};// -------------------------------------------------------------------

class FrameStreamerResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.v1.FrameStreamerResponse) */ {
 public:
  inline FrameStreamerResponse() : FrameStreamerResponse(nullptr) {}
  ~FrameStreamerResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FrameStreamerResponse(::google::protobuf::internal::ConstantInitialized);

  FrameStreamerResponse(const FrameStreamerResponse& from);
  FrameStreamerResponse(FrameStreamerResponse&& from) noexcept
    : FrameStreamerResponse() {
    *this = ::std::move(from);
  }

  inline FrameStreamerResponse& operator=(const FrameStreamerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FrameStreamerResponse& operator=(FrameStreamerResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FrameStreamerResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FrameStreamerResponse* internal_default_instance() {
    return reinterpret_cast<const FrameStreamerResponse*>(
               &_FrameStreamerResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(FrameStreamerResponse& a, FrameStreamerResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(FrameStreamerResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FrameStreamerResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FrameStreamerResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FrameStreamerResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FrameStreamerResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FrameStreamerResponse& from) {
    FrameStreamerResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FrameStreamerResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "api.v1.FrameStreamerResponse";
  }
  protected:
  explicit FrameStreamerResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFrameFieldNumber = 1,
    kErrorFieldNumber = 2,
  };
  // .api.v1.Frame frame = 1 [json_name = "frame"];
  bool has_frame() const;
  void clear_frame() ;
  const ::api::v1::Frame& frame() const;
  PROTOBUF_NODISCARD ::api::v1::Frame* release_frame();
  ::api::v1::Frame* mutable_frame();
  void set_allocated_frame(::api::v1::Frame* value);
  void unsafe_arena_set_allocated_frame(::api::v1::Frame* value);
  ::api::v1::Frame* unsafe_arena_release_frame();

  private:
  const ::api::v1::Frame& _internal_frame() const;
  ::api::v1::Frame* _internal_mutable_frame();

  public:
  // .ferrors.v1.ErrorPayload error = 2 [json_name = "error"];
  bool has_error() const;
  void clear_error() ;
  const ::ferrors::v1::ErrorPayload& error() const;
  PROTOBUF_NODISCARD ::ferrors::v1::ErrorPayload* release_error();
  ::ferrors::v1::ErrorPayload* mutable_error();
  void set_allocated_error(::ferrors::v1::ErrorPayload* value);
  void unsafe_arena_set_allocated_error(::ferrors::v1::ErrorPayload* value);
  ::ferrors::v1::ErrorPayload* unsafe_arena_release_error();

  private:
  const ::ferrors::v1::ErrorPayload& _internal_error() const;
  ::ferrors::v1::ErrorPayload* _internal_mutable_error();

  public:
  // @@protoc_insertion_point(class_scope:api.v1.FrameStreamerResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::api::v1::Frame* frame_;
    ::ferrors::v1::ErrorPayload* error_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_v1_2fframer_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Frame

// repeated uint32 keys = 1 [json_name = "keys"];
inline int Frame::_internal_keys_size() const {
  return _internal_keys().size();
}
inline int Frame::keys_size() const {
  return _internal_keys_size();
}
inline void Frame::clear_keys() {
  _internal_mutable_keys()->Clear();
}
inline ::uint32_t Frame::keys(int index) const {
  // @@protoc_insertion_point(field_get:api.v1.Frame.keys)
  return _internal_keys().Get(index);
}
inline void Frame::set_keys(int index, ::uint32_t value) {
  _internal_mutable_keys()->Set(index, value);
  // @@protoc_insertion_point(field_set:api.v1.Frame.keys)
}
inline void Frame::add_keys(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keys()->Add(value);
  // @@protoc_insertion_point(field_add:api.v1.Frame.keys)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& Frame::keys() const {
  // @@protoc_insertion_point(field_list:api.v1.Frame.keys)
  return _internal_keys();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* Frame::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:api.v1.Frame.keys)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_keys();
}

inline const ::google::protobuf::RepeatedField<::uint32_t>& Frame::_internal_keys() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.keys_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* Frame::_internal_mutable_keys() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.keys_;
}

// repeated .telem.Series series = 2 [json_name = "series"];
inline int Frame::_internal_series_size() const {
  return _internal_series().size();
}
inline int Frame::series_size() const {
  return _internal_series_size();
}
inline ::telem::Series* Frame::mutable_series(int index) {
  // @@protoc_insertion_point(field_mutable:api.v1.Frame.series)
  return _internal_mutable_series()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::telem::Series >*
Frame::mutable_series() {
  // @@protoc_insertion_point(field_mutable_list:api.v1.Frame.series)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_series();
}
inline const ::telem::Series& Frame::series(int index) const {
  // @@protoc_insertion_point(field_get:api.v1.Frame.series)
    return _internal_series().Get(index);
}
inline ::telem::Series* Frame::add_series() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::telem::Series* _add = _internal_mutable_series()->Add();
  // @@protoc_insertion_point(field_add:api.v1.Frame.series)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::telem::Series >&
Frame::series() const {
  // @@protoc_insertion_point(field_list:api.v1.Frame.series)
  return _internal_series();
}
inline const ::google::protobuf::RepeatedPtrField<::telem::Series>&
Frame::_internal_series() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.series_;
}
inline ::google::protobuf::RepeatedPtrField<::telem::Series>*
Frame::_internal_mutable_series() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.series_;
}

// -------------------------------------------------------------------

// FrameIteratorRequest

// int32 command = 1 [json_name = "command"];
inline void FrameIteratorRequest::clear_command() {
  _impl_.command_ = 0;
}
inline ::int32_t FrameIteratorRequest::command() const {
  // @@protoc_insertion_point(field_get:api.v1.FrameIteratorRequest.command)
  return _internal_command();
}
inline void FrameIteratorRequest::set_command(::int32_t value) {
  _internal_set_command(value);
  // @@protoc_insertion_point(field_set:api.v1.FrameIteratorRequest.command)
}
inline ::int32_t FrameIteratorRequest::_internal_command() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.command_;
}
inline void FrameIteratorRequest::_internal_set_command(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.command_ = value;
}

// int64 span = 2 [json_name = "span"];
inline void FrameIteratorRequest::clear_span() {
  _impl_.span_ = ::int64_t{0};
}
inline ::int64_t FrameIteratorRequest::span() const {
  // @@protoc_insertion_point(field_get:api.v1.FrameIteratorRequest.span)
  return _internal_span();
}
inline void FrameIteratorRequest::set_span(::int64_t value) {
  _internal_set_span(value);
  // @@protoc_insertion_point(field_set:api.v1.FrameIteratorRequest.span)
}
inline ::int64_t FrameIteratorRequest::_internal_span() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.span_;
}
inline void FrameIteratorRequest::_internal_set_span(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.span_ = value;
}

// .telem.TimeRange range = 3 [json_name = "range"];
inline bool FrameIteratorRequest::has_range() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.range_ != nullptr);
  return value;
}
inline const ::telem::TimeRange& FrameIteratorRequest::_internal_range() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::telem::TimeRange* p = _impl_.range_;
  return p != nullptr ? *p : reinterpret_cast<const ::telem::TimeRange&>(::telem::_TimeRange_default_instance_);
}
inline const ::telem::TimeRange& FrameIteratorRequest::range() const {
  // @@protoc_insertion_point(field_get:api.v1.FrameIteratorRequest.range)
  return _internal_range();
}
inline void FrameIteratorRequest::unsafe_arena_set_allocated_range(::telem::TimeRange* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.range_);
  }
  _impl_.range_ = reinterpret_cast<::telem::TimeRange*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:api.v1.FrameIteratorRequest.range)
}
inline ::telem::TimeRange* FrameIteratorRequest::release_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::telem::TimeRange* released = _impl_.range_;
  _impl_.range_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::telem::TimeRange* FrameIteratorRequest::unsafe_arena_release_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:api.v1.FrameIteratorRequest.range)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::telem::TimeRange* temp = _impl_.range_;
  _impl_.range_ = nullptr;
  return temp;
}
inline ::telem::TimeRange* FrameIteratorRequest::_internal_mutable_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.range_ == nullptr) {
    auto* p = CreateMaybeMessage<::telem::TimeRange>(GetArenaForAllocation());
    _impl_.range_ = reinterpret_cast<::telem::TimeRange*>(p);
  }
  return _impl_.range_;
}
inline ::telem::TimeRange* FrameIteratorRequest::mutable_range() {
  ::telem::TimeRange* _msg = _internal_mutable_range();
  // @@protoc_insertion_point(field_mutable:api.v1.FrameIteratorRequest.range)
  return _msg;
}
inline void FrameIteratorRequest::set_allocated_range(::telem::TimeRange* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.range_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.range_ = reinterpret_cast<::telem::TimeRange*>(value);
  // @@protoc_insertion_point(field_set_allocated:api.v1.FrameIteratorRequest.range)
}

// int64 stamp = 4 [json_name = "stamp"];
inline void FrameIteratorRequest::clear_stamp() {
  _impl_.stamp_ = ::int64_t{0};
}
inline ::int64_t FrameIteratorRequest::stamp() const {
  // @@protoc_insertion_point(field_get:api.v1.FrameIteratorRequest.stamp)
  return _internal_stamp();
}
inline void FrameIteratorRequest::set_stamp(::int64_t value) {
  _internal_set_stamp(value);
  // @@protoc_insertion_point(field_set:api.v1.FrameIteratorRequest.stamp)
}
inline ::int64_t FrameIteratorRequest::_internal_stamp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.stamp_;
}
inline void FrameIteratorRequest::_internal_set_stamp(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.stamp_ = value;
}

// repeated uint32 keys = 5 [json_name = "keys"];
inline int FrameIteratorRequest::_internal_keys_size() const {
  return _internal_keys().size();
}
inline int FrameIteratorRequest::keys_size() const {
  return _internal_keys_size();
}
inline void FrameIteratorRequest::clear_keys() {
  _internal_mutable_keys()->Clear();
}
inline ::uint32_t FrameIteratorRequest::keys(int index) const {
  // @@protoc_insertion_point(field_get:api.v1.FrameIteratorRequest.keys)
  return _internal_keys().Get(index);
}
inline void FrameIteratorRequest::set_keys(int index, ::uint32_t value) {
  _internal_mutable_keys()->Set(index, value);
  // @@protoc_insertion_point(field_set:api.v1.FrameIteratorRequest.keys)
}
inline void FrameIteratorRequest::add_keys(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keys()->Add(value);
  // @@protoc_insertion_point(field_add:api.v1.FrameIteratorRequest.keys)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& FrameIteratorRequest::keys() const {
  // @@protoc_insertion_point(field_list:api.v1.FrameIteratorRequest.keys)
  return _internal_keys();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* FrameIteratorRequest::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:api.v1.FrameIteratorRequest.keys)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_keys();
}

inline const ::google::protobuf::RepeatedField<::uint32_t>& FrameIteratorRequest::_internal_keys() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.keys_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* FrameIteratorRequest::_internal_mutable_keys() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.keys_;
}

// -------------------------------------------------------------------

// FrameIteratorResponse

// int32 variant = 1 [json_name = "variant"];
inline void FrameIteratorResponse::clear_variant() {
  _impl_.variant_ = 0;
}
inline ::int32_t FrameIteratorResponse::variant() const {
  // @@protoc_insertion_point(field_get:api.v1.FrameIteratorResponse.variant)
  return _internal_variant();
}
inline void FrameIteratorResponse::set_variant(::int32_t value) {
  _internal_set_variant(value);
  // @@protoc_insertion_point(field_set:api.v1.FrameIteratorResponse.variant)
}
inline ::int32_t FrameIteratorResponse::_internal_variant() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.variant_;
}
inline void FrameIteratorResponse::_internal_set_variant(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.variant_ = value;
}

// int32 command = 2 [json_name = "command"];
inline void FrameIteratorResponse::clear_command() {
  _impl_.command_ = 0;
}
inline ::int32_t FrameIteratorResponse::command() const {
  // @@protoc_insertion_point(field_get:api.v1.FrameIteratorResponse.command)
  return _internal_command();
}
inline void FrameIteratorResponse::set_command(::int32_t value) {
  _internal_set_command(value);
  // @@protoc_insertion_point(field_set:api.v1.FrameIteratorResponse.command)
}
inline ::int32_t FrameIteratorResponse::_internal_command() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.command_;
}
inline void FrameIteratorResponse::_internal_set_command(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.command_ = value;
}

// .api.v1.Frame frame = 3 [json_name = "frame"];
inline bool FrameIteratorResponse::has_frame() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.frame_ != nullptr);
  return value;
}
inline void FrameIteratorResponse::clear_frame() {
  if (_impl_.frame_ != nullptr) _impl_.frame_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::api::v1::Frame& FrameIteratorResponse::_internal_frame() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::api::v1::Frame* p = _impl_.frame_;
  return p != nullptr ? *p : reinterpret_cast<const ::api::v1::Frame&>(::api::v1::_Frame_default_instance_);
}
inline const ::api::v1::Frame& FrameIteratorResponse::frame() const {
  // @@protoc_insertion_point(field_get:api.v1.FrameIteratorResponse.frame)
  return _internal_frame();
}
inline void FrameIteratorResponse::unsafe_arena_set_allocated_frame(::api::v1::Frame* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.frame_);
  }
  _impl_.frame_ = reinterpret_cast<::api::v1::Frame*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:api.v1.FrameIteratorResponse.frame)
}
inline ::api::v1::Frame* FrameIteratorResponse::release_frame() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::api::v1::Frame* released = _impl_.frame_;
  _impl_.frame_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::api::v1::Frame* FrameIteratorResponse::unsafe_arena_release_frame() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:api.v1.FrameIteratorResponse.frame)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::api::v1::Frame* temp = _impl_.frame_;
  _impl_.frame_ = nullptr;
  return temp;
}
inline ::api::v1::Frame* FrameIteratorResponse::_internal_mutable_frame() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.frame_ == nullptr) {
    auto* p = CreateMaybeMessage<::api::v1::Frame>(GetArenaForAllocation());
    _impl_.frame_ = reinterpret_cast<::api::v1::Frame*>(p);
  }
  return _impl_.frame_;
}
inline ::api::v1::Frame* FrameIteratorResponse::mutable_frame() {
  ::api::v1::Frame* _msg = _internal_mutable_frame();
  // @@protoc_insertion_point(field_mutable:api.v1.FrameIteratorResponse.frame)
  return _msg;
}
inline void FrameIteratorResponse::set_allocated_frame(::api::v1::Frame* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::api::v1::Frame*>(_impl_.frame_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::api::v1::Frame*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.frame_ = reinterpret_cast<::api::v1::Frame*>(value);
  // @@protoc_insertion_point(field_set_allocated:api.v1.FrameIteratorResponse.frame)
}

// int32 node_key = 43 [json_name = "nodeKey"];
inline void FrameIteratorResponse::clear_node_key() {
  _impl_.node_key_ = 0;
}
inline ::int32_t FrameIteratorResponse::node_key() const {
  // @@protoc_insertion_point(field_get:api.v1.FrameIteratorResponse.node_key)
  return _internal_node_key();
}
inline void FrameIteratorResponse::set_node_key(::int32_t value) {
  _internal_set_node_key(value);
  // @@protoc_insertion_point(field_set:api.v1.FrameIteratorResponse.node_key)
}
inline ::int32_t FrameIteratorResponse::_internal_node_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.node_key_;
}
inline void FrameIteratorResponse::_internal_set_node_key(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.node_key_ = value;
}

// bool ack = 5 [json_name = "ack"];
inline void FrameIteratorResponse::clear_ack() {
  _impl_.ack_ = false;
}
inline bool FrameIteratorResponse::ack() const {
  // @@protoc_insertion_point(field_get:api.v1.FrameIteratorResponse.ack)
  return _internal_ack();
}
inline void FrameIteratorResponse::set_ack(bool value) {
  _internal_set_ack(value);
  // @@protoc_insertion_point(field_set:api.v1.FrameIteratorResponse.ack)
}
inline bool FrameIteratorResponse::_internal_ack() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ack_;
}
inline void FrameIteratorResponse::_internal_set_ack(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ack_ = value;
}

// int32 seq_num = 6 [json_name = "seqNum"];
inline void FrameIteratorResponse::clear_seq_num() {
  _impl_.seq_num_ = 0;
}
inline ::int32_t FrameIteratorResponse::seq_num() const {
  // @@protoc_insertion_point(field_get:api.v1.FrameIteratorResponse.seq_num)
  return _internal_seq_num();
}
inline void FrameIteratorResponse::set_seq_num(::int32_t value) {
  _internal_set_seq_num(value);
  // @@protoc_insertion_point(field_set:api.v1.FrameIteratorResponse.seq_num)
}
inline ::int32_t FrameIteratorResponse::_internal_seq_num() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.seq_num_;
}
inline void FrameIteratorResponse::_internal_set_seq_num(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.seq_num_ = value;
}

// .ferrors.v1.ErrorPayload error = 7 [json_name = "error"];
inline bool FrameIteratorResponse::has_error() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.error_ != nullptr);
  return value;
}
inline const ::ferrors::v1::ErrorPayload& FrameIteratorResponse::_internal_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::ferrors::v1::ErrorPayload* p = _impl_.error_;
  return p != nullptr ? *p : reinterpret_cast<const ::ferrors::v1::ErrorPayload&>(::ferrors::v1::_ErrorPayload_default_instance_);
}
inline const ::ferrors::v1::ErrorPayload& FrameIteratorResponse::error() const {
  // @@protoc_insertion_point(field_get:api.v1.FrameIteratorResponse.error)
  return _internal_error();
}
inline void FrameIteratorResponse::unsafe_arena_set_allocated_error(::ferrors::v1::ErrorPayload* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.error_);
  }
  _impl_.error_ = reinterpret_cast<::ferrors::v1::ErrorPayload*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:api.v1.FrameIteratorResponse.error)
}
inline ::ferrors::v1::ErrorPayload* FrameIteratorResponse::release_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ferrors::v1::ErrorPayload* released = _impl_.error_;
  _impl_.error_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::ferrors::v1::ErrorPayload* FrameIteratorResponse::unsafe_arena_release_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:api.v1.FrameIteratorResponse.error)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ferrors::v1::ErrorPayload* temp = _impl_.error_;
  _impl_.error_ = nullptr;
  return temp;
}
inline ::ferrors::v1::ErrorPayload* FrameIteratorResponse::_internal_mutable_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.error_ == nullptr) {
    auto* p = CreateMaybeMessage<::ferrors::v1::ErrorPayload>(GetArenaForAllocation());
    _impl_.error_ = reinterpret_cast<::ferrors::v1::ErrorPayload*>(p);
  }
  return _impl_.error_;
}
inline ::ferrors::v1::ErrorPayload* FrameIteratorResponse::mutable_error() {
  ::ferrors::v1::ErrorPayload* _msg = _internal_mutable_error();
  // @@protoc_insertion_point(field_mutable:api.v1.FrameIteratorResponse.error)
  return _msg;
}
inline void FrameIteratorResponse::set_allocated_error(::ferrors::v1::ErrorPayload* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.error_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.error_ = reinterpret_cast<::ferrors::v1::ErrorPayload*>(value);
  // @@protoc_insertion_point(field_set_allocated:api.v1.FrameIteratorResponse.error)
}

// -------------------------------------------------------------------

// FrameWriterConfig

// repeated uint32 keys = 1 [json_name = "keys"];
inline int FrameWriterConfig::_internal_keys_size() const {
  return _internal_keys().size();
}
inline int FrameWriterConfig::keys_size() const {
  return _internal_keys_size();
}
inline void FrameWriterConfig::clear_keys() {
  _internal_mutable_keys()->Clear();
}
inline ::uint32_t FrameWriterConfig::keys(int index) const {
  // @@protoc_insertion_point(field_get:api.v1.FrameWriterConfig.keys)
  return _internal_keys().Get(index);
}
inline void FrameWriterConfig::set_keys(int index, ::uint32_t value) {
  _internal_mutable_keys()->Set(index, value);
  // @@protoc_insertion_point(field_set:api.v1.FrameWriterConfig.keys)
}
inline void FrameWriterConfig::add_keys(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keys()->Add(value);
  // @@protoc_insertion_point(field_add:api.v1.FrameWriterConfig.keys)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& FrameWriterConfig::keys() const {
  // @@protoc_insertion_point(field_list:api.v1.FrameWriterConfig.keys)
  return _internal_keys();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* FrameWriterConfig::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:api.v1.FrameWriterConfig.keys)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_keys();
}

inline const ::google::protobuf::RepeatedField<::uint32_t>& FrameWriterConfig::_internal_keys() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.keys_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* FrameWriterConfig::_internal_mutable_keys() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.keys_;
}

// int64 start = 2 [json_name = "start"];
inline void FrameWriterConfig::clear_start() {
  _impl_.start_ = ::int64_t{0};
}
inline ::int64_t FrameWriterConfig::start() const {
  // @@protoc_insertion_point(field_get:api.v1.FrameWriterConfig.start)
  return _internal_start();
}
inline void FrameWriterConfig::set_start(::int64_t value) {
  _internal_set_start(value);
  // @@protoc_insertion_point(field_set:api.v1.FrameWriterConfig.start)
}
inline ::int64_t FrameWriterConfig::_internal_start() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.start_;
}
inline void FrameWriterConfig::_internal_set_start(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.start_ = value;
}

// -------------------------------------------------------------------

// FrameWriterRequest

// int32 command = 1 [json_name = "command"];
inline void FrameWriterRequest::clear_command() {
  _impl_.command_ = 0;
}
inline ::int32_t FrameWriterRequest::command() const {
  // @@protoc_insertion_point(field_get:api.v1.FrameWriterRequest.command)
  return _internal_command();
}
inline void FrameWriterRequest::set_command(::int32_t value) {
  _internal_set_command(value);
  // @@protoc_insertion_point(field_set:api.v1.FrameWriterRequest.command)
}
inline ::int32_t FrameWriterRequest::_internal_command() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.command_;
}
inline void FrameWriterRequest::_internal_set_command(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.command_ = value;
}

// .api.v1.FrameWriterConfig config = 2 [json_name = "config"];
inline bool FrameWriterRequest::has_config() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.config_ != nullptr);
  return value;
}
inline void FrameWriterRequest::clear_config() {
  if (_impl_.config_ != nullptr) _impl_.config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::api::v1::FrameWriterConfig& FrameWriterRequest::_internal_config() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::api::v1::FrameWriterConfig* p = _impl_.config_;
  return p != nullptr ? *p : reinterpret_cast<const ::api::v1::FrameWriterConfig&>(::api::v1::_FrameWriterConfig_default_instance_);
}
inline const ::api::v1::FrameWriterConfig& FrameWriterRequest::config() const {
  // @@protoc_insertion_point(field_get:api.v1.FrameWriterRequest.config)
  return _internal_config();
}
inline void FrameWriterRequest::unsafe_arena_set_allocated_config(::api::v1::FrameWriterConfig* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.config_);
  }
  _impl_.config_ = reinterpret_cast<::api::v1::FrameWriterConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:api.v1.FrameWriterRequest.config)
}
inline ::api::v1::FrameWriterConfig* FrameWriterRequest::release_config() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::api::v1::FrameWriterConfig* released = _impl_.config_;
  _impl_.config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::api::v1::FrameWriterConfig* FrameWriterRequest::unsafe_arena_release_config() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:api.v1.FrameWriterRequest.config)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::api::v1::FrameWriterConfig* temp = _impl_.config_;
  _impl_.config_ = nullptr;
  return temp;
}
inline ::api::v1::FrameWriterConfig* FrameWriterRequest::_internal_mutable_config() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.config_ == nullptr) {
    auto* p = CreateMaybeMessage<::api::v1::FrameWriterConfig>(GetArenaForAllocation());
    _impl_.config_ = reinterpret_cast<::api::v1::FrameWriterConfig*>(p);
  }
  return _impl_.config_;
}
inline ::api::v1::FrameWriterConfig* FrameWriterRequest::mutable_config() {
  ::api::v1::FrameWriterConfig* _msg = _internal_mutable_config();
  // @@protoc_insertion_point(field_mutable:api.v1.FrameWriterRequest.config)
  return _msg;
}
inline void FrameWriterRequest::set_allocated_config(::api::v1::FrameWriterConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::api::v1::FrameWriterConfig*>(_impl_.config_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::api::v1::FrameWriterConfig*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.config_ = reinterpret_cast<::api::v1::FrameWriterConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:api.v1.FrameWriterRequest.config)
}

// .api.v1.Frame frame = 3 [json_name = "frame"];
inline bool FrameWriterRequest::has_frame() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.frame_ != nullptr);
  return value;
}
inline void FrameWriterRequest::clear_frame() {
  if (_impl_.frame_ != nullptr) _impl_.frame_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::api::v1::Frame& FrameWriterRequest::_internal_frame() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::api::v1::Frame* p = _impl_.frame_;
  return p != nullptr ? *p : reinterpret_cast<const ::api::v1::Frame&>(::api::v1::_Frame_default_instance_);
}
inline const ::api::v1::Frame& FrameWriterRequest::frame() const {
  // @@protoc_insertion_point(field_get:api.v1.FrameWriterRequest.frame)
  return _internal_frame();
}
inline void FrameWriterRequest::unsafe_arena_set_allocated_frame(::api::v1::Frame* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.frame_);
  }
  _impl_.frame_ = reinterpret_cast<::api::v1::Frame*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:api.v1.FrameWriterRequest.frame)
}
inline ::api::v1::Frame* FrameWriterRequest::release_frame() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::api::v1::Frame* released = _impl_.frame_;
  _impl_.frame_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::api::v1::Frame* FrameWriterRequest::unsafe_arena_release_frame() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:api.v1.FrameWriterRequest.frame)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::api::v1::Frame* temp = _impl_.frame_;
  _impl_.frame_ = nullptr;
  return temp;
}
inline ::api::v1::Frame* FrameWriterRequest::_internal_mutable_frame() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.frame_ == nullptr) {
    auto* p = CreateMaybeMessage<::api::v1::Frame>(GetArenaForAllocation());
    _impl_.frame_ = reinterpret_cast<::api::v1::Frame*>(p);
  }
  return _impl_.frame_;
}
inline ::api::v1::Frame* FrameWriterRequest::mutable_frame() {
  ::api::v1::Frame* _msg = _internal_mutable_frame();
  // @@protoc_insertion_point(field_mutable:api.v1.FrameWriterRequest.frame)
  return _msg;
}
inline void FrameWriterRequest::set_allocated_frame(::api::v1::Frame* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::api::v1::Frame*>(_impl_.frame_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::api::v1::Frame*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.frame_ = reinterpret_cast<::api::v1::Frame*>(value);
  // @@protoc_insertion_point(field_set_allocated:api.v1.FrameWriterRequest.frame)
}

// -------------------------------------------------------------------

// FrameWriterResponse

// int32 command = 1 [json_name = "command"];
inline void FrameWriterResponse::clear_command() {
  _impl_.command_ = 0;
}
inline ::int32_t FrameWriterResponse::command() const {
  // @@protoc_insertion_point(field_get:api.v1.FrameWriterResponse.command)
  return _internal_command();
}
inline void FrameWriterResponse::set_command(::int32_t value) {
  _internal_set_command(value);
  // @@protoc_insertion_point(field_set:api.v1.FrameWriterResponse.command)
}
inline ::int32_t FrameWriterResponse::_internal_command() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.command_;
}
inline void FrameWriterResponse::_internal_set_command(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.command_ = value;
}

// bool ack = 2 [json_name = "ack"];
inline void FrameWriterResponse::clear_ack() {
  _impl_.ack_ = false;
}
inline bool FrameWriterResponse::ack() const {
  // @@protoc_insertion_point(field_get:api.v1.FrameWriterResponse.ack)
  return _internal_ack();
}
inline void FrameWriterResponse::set_ack(bool value) {
  _internal_set_ack(value);
  // @@protoc_insertion_point(field_set:api.v1.FrameWriterResponse.ack)
}
inline bool FrameWriterResponse::_internal_ack() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ack_;
}
inline void FrameWriterResponse::_internal_set_ack(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ack_ = value;
}

// int32 node_key = 3 [json_name = "nodeKey"];
inline void FrameWriterResponse::clear_node_key() {
  _impl_.node_key_ = 0;
}
inline ::int32_t FrameWriterResponse::node_key() const {
  // @@protoc_insertion_point(field_get:api.v1.FrameWriterResponse.node_key)
  return _internal_node_key();
}
inline void FrameWriterResponse::set_node_key(::int32_t value) {
  _internal_set_node_key(value);
  // @@protoc_insertion_point(field_set:api.v1.FrameWriterResponse.node_key)
}
inline ::int32_t FrameWriterResponse::_internal_node_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.node_key_;
}
inline void FrameWriterResponse::_internal_set_node_key(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.node_key_ = value;
}

// int32 counter = 4 [json_name = "counter"];
inline void FrameWriterResponse::clear_counter() {
  _impl_.counter_ = 0;
}
inline ::int32_t FrameWriterResponse::counter() const {
  // @@protoc_insertion_point(field_get:api.v1.FrameWriterResponse.counter)
  return _internal_counter();
}
inline void FrameWriterResponse::set_counter(::int32_t value) {
  _internal_set_counter(value);
  // @@protoc_insertion_point(field_set:api.v1.FrameWriterResponse.counter)
}
inline ::int32_t FrameWriterResponse::_internal_counter() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.counter_;
}
inline void FrameWriterResponse::_internal_set_counter(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.counter_ = value;
}

// .ferrors.v1.ErrorPayload error = 5 [json_name = "error"];
inline bool FrameWriterResponse::has_error() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.error_ != nullptr);
  return value;
}
inline const ::ferrors::v1::ErrorPayload& FrameWriterResponse::_internal_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::ferrors::v1::ErrorPayload* p = _impl_.error_;
  return p != nullptr ? *p : reinterpret_cast<const ::ferrors::v1::ErrorPayload&>(::ferrors::v1::_ErrorPayload_default_instance_);
}
inline const ::ferrors::v1::ErrorPayload& FrameWriterResponse::error() const {
  // @@protoc_insertion_point(field_get:api.v1.FrameWriterResponse.error)
  return _internal_error();
}
inline void FrameWriterResponse::unsafe_arena_set_allocated_error(::ferrors::v1::ErrorPayload* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.error_);
  }
  _impl_.error_ = reinterpret_cast<::ferrors::v1::ErrorPayload*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:api.v1.FrameWriterResponse.error)
}
inline ::ferrors::v1::ErrorPayload* FrameWriterResponse::release_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ferrors::v1::ErrorPayload* released = _impl_.error_;
  _impl_.error_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::ferrors::v1::ErrorPayload* FrameWriterResponse::unsafe_arena_release_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:api.v1.FrameWriterResponse.error)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ferrors::v1::ErrorPayload* temp = _impl_.error_;
  _impl_.error_ = nullptr;
  return temp;
}
inline ::ferrors::v1::ErrorPayload* FrameWriterResponse::_internal_mutable_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.error_ == nullptr) {
    auto* p = CreateMaybeMessage<::ferrors::v1::ErrorPayload>(GetArenaForAllocation());
    _impl_.error_ = reinterpret_cast<::ferrors::v1::ErrorPayload*>(p);
  }
  return _impl_.error_;
}
inline ::ferrors::v1::ErrorPayload* FrameWriterResponse::mutable_error() {
  ::ferrors::v1::ErrorPayload* _msg = _internal_mutable_error();
  // @@protoc_insertion_point(field_mutable:api.v1.FrameWriterResponse.error)
  return _msg;
}
inline void FrameWriterResponse::set_allocated_error(::ferrors::v1::ErrorPayload* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.error_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.error_ = reinterpret_cast<::ferrors::v1::ErrorPayload*>(value);
  // @@protoc_insertion_point(field_set_allocated:api.v1.FrameWriterResponse.error)
}

// int64 end = 6 [json_name = "end"];
inline void FrameWriterResponse::clear_end() {
  _impl_.end_ = ::int64_t{0};
}
inline ::int64_t FrameWriterResponse::end() const {
  // @@protoc_insertion_point(field_get:api.v1.FrameWriterResponse.end)
  return _internal_end();
}
inline void FrameWriterResponse::set_end(::int64_t value) {
  _internal_set_end(value);
  // @@protoc_insertion_point(field_set:api.v1.FrameWriterResponse.end)
}
inline ::int64_t FrameWriterResponse::_internal_end() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.end_;
}
inline void FrameWriterResponse::_internal_set_end(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.end_ = value;
}

// -------------------------------------------------------------------

// FrameStreamerRequest

// int64 start = 1 [json_name = "start"];
inline void FrameStreamerRequest::clear_start() {
  _impl_.start_ = ::int64_t{0};
}
inline ::int64_t FrameStreamerRequest::start() const {
  // @@protoc_insertion_point(field_get:api.v1.FrameStreamerRequest.start)
  return _internal_start();
}
inline void FrameStreamerRequest::set_start(::int64_t value) {
  _internal_set_start(value);
  // @@protoc_insertion_point(field_set:api.v1.FrameStreamerRequest.start)
}
inline ::int64_t FrameStreamerRequest::_internal_start() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.start_;
}
inline void FrameStreamerRequest::_internal_set_start(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.start_ = value;
}

// repeated uint32 keys = 2 [json_name = "keys"];
inline int FrameStreamerRequest::_internal_keys_size() const {
  return _internal_keys().size();
}
inline int FrameStreamerRequest::keys_size() const {
  return _internal_keys_size();
}
inline void FrameStreamerRequest::clear_keys() {
  _internal_mutable_keys()->Clear();
}
inline ::uint32_t FrameStreamerRequest::keys(int index) const {
  // @@protoc_insertion_point(field_get:api.v1.FrameStreamerRequest.keys)
  return _internal_keys().Get(index);
}
inline void FrameStreamerRequest::set_keys(int index, ::uint32_t value) {
  _internal_mutable_keys()->Set(index, value);
  // @@protoc_insertion_point(field_set:api.v1.FrameStreamerRequest.keys)
}
inline void FrameStreamerRequest::add_keys(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keys()->Add(value);
  // @@protoc_insertion_point(field_add:api.v1.FrameStreamerRequest.keys)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& FrameStreamerRequest::keys() const {
  // @@protoc_insertion_point(field_list:api.v1.FrameStreamerRequest.keys)
  return _internal_keys();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* FrameStreamerRequest::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:api.v1.FrameStreamerRequest.keys)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_keys();
}

inline const ::google::protobuf::RepeatedField<::uint32_t>& FrameStreamerRequest::_internal_keys() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.keys_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* FrameStreamerRequest::_internal_mutable_keys() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.keys_;
}

// -------------------------------------------------------------------

// FrameStreamerResponse

// .api.v1.Frame frame = 1 [json_name = "frame"];
inline bool FrameStreamerResponse::has_frame() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.frame_ != nullptr);
  return value;
}
inline void FrameStreamerResponse::clear_frame() {
  if (_impl_.frame_ != nullptr) _impl_.frame_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::api::v1::Frame& FrameStreamerResponse::_internal_frame() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::api::v1::Frame* p = _impl_.frame_;
  return p != nullptr ? *p : reinterpret_cast<const ::api::v1::Frame&>(::api::v1::_Frame_default_instance_);
}
inline const ::api::v1::Frame& FrameStreamerResponse::frame() const {
  // @@protoc_insertion_point(field_get:api.v1.FrameStreamerResponse.frame)
  return _internal_frame();
}
inline void FrameStreamerResponse::unsafe_arena_set_allocated_frame(::api::v1::Frame* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.frame_);
  }
  _impl_.frame_ = reinterpret_cast<::api::v1::Frame*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:api.v1.FrameStreamerResponse.frame)
}
inline ::api::v1::Frame* FrameStreamerResponse::release_frame() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::api::v1::Frame* released = _impl_.frame_;
  _impl_.frame_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::api::v1::Frame* FrameStreamerResponse::unsafe_arena_release_frame() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:api.v1.FrameStreamerResponse.frame)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::api::v1::Frame* temp = _impl_.frame_;
  _impl_.frame_ = nullptr;
  return temp;
}
inline ::api::v1::Frame* FrameStreamerResponse::_internal_mutable_frame() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.frame_ == nullptr) {
    auto* p = CreateMaybeMessage<::api::v1::Frame>(GetArenaForAllocation());
    _impl_.frame_ = reinterpret_cast<::api::v1::Frame*>(p);
  }
  return _impl_.frame_;
}
inline ::api::v1::Frame* FrameStreamerResponse::mutable_frame() {
  ::api::v1::Frame* _msg = _internal_mutable_frame();
  // @@protoc_insertion_point(field_mutable:api.v1.FrameStreamerResponse.frame)
  return _msg;
}
inline void FrameStreamerResponse::set_allocated_frame(::api::v1::Frame* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::api::v1::Frame*>(_impl_.frame_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::api::v1::Frame*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.frame_ = reinterpret_cast<::api::v1::Frame*>(value);
  // @@protoc_insertion_point(field_set_allocated:api.v1.FrameStreamerResponse.frame)
}

// .ferrors.v1.ErrorPayload error = 2 [json_name = "error"];
inline bool FrameStreamerResponse::has_error() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.error_ != nullptr);
  return value;
}
inline const ::ferrors::v1::ErrorPayload& FrameStreamerResponse::_internal_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::ferrors::v1::ErrorPayload* p = _impl_.error_;
  return p != nullptr ? *p : reinterpret_cast<const ::ferrors::v1::ErrorPayload&>(::ferrors::v1::_ErrorPayload_default_instance_);
}
inline const ::ferrors::v1::ErrorPayload& FrameStreamerResponse::error() const {
  // @@protoc_insertion_point(field_get:api.v1.FrameStreamerResponse.error)
  return _internal_error();
}
inline void FrameStreamerResponse::unsafe_arena_set_allocated_error(::ferrors::v1::ErrorPayload* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.error_);
  }
  _impl_.error_ = reinterpret_cast<::ferrors::v1::ErrorPayload*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:api.v1.FrameStreamerResponse.error)
}
inline ::ferrors::v1::ErrorPayload* FrameStreamerResponse::release_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ferrors::v1::ErrorPayload* released = _impl_.error_;
  _impl_.error_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::ferrors::v1::ErrorPayload* FrameStreamerResponse::unsafe_arena_release_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:api.v1.FrameStreamerResponse.error)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ferrors::v1::ErrorPayload* temp = _impl_.error_;
  _impl_.error_ = nullptr;
  return temp;
}
inline ::ferrors::v1::ErrorPayload* FrameStreamerResponse::_internal_mutable_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.error_ == nullptr) {
    auto* p = CreateMaybeMessage<::ferrors::v1::ErrorPayload>(GetArenaForAllocation());
    _impl_.error_ = reinterpret_cast<::ferrors::v1::ErrorPayload*>(p);
  }
  return _impl_.error_;
}
inline ::ferrors::v1::ErrorPayload* FrameStreamerResponse::mutable_error() {
  ::ferrors::v1::ErrorPayload* _msg = _internal_mutable_error();
  // @@protoc_insertion_point(field_mutable:api.v1.FrameStreamerResponse.error)
  return _msg;
}
inline void FrameStreamerResponse::set_allocated_error(::ferrors::v1::ErrorPayload* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.error_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.error_ = reinterpret_cast<::ferrors::v1::ErrorPayload*>(value);
  // @@protoc_insertion_point(field_set_allocated:api.v1.FrameStreamerResponse.error)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace api


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_v1_2fframer_2eproto_2epb_2eh
