// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: v1/hardware.proto

package apiv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Rack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  uint32 `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Rack) Reset() {
	*x = Rack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_hardware_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rack) ProtoMessage() {}

func (x *Rack) ProtoReflect() protoreflect.Message {
	mi := &file_v1_hardware_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rack.ProtoReflect.Descriptor instead.
func (*Rack) Descriptor() ([]byte, []int) {
	return file_v1_hardware_proto_rawDescGZIP(), []int{0}
}

func (x *Rack) GetKey() uint32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *Rack) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type HardwareCreateRackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Racks []*Rack `protobuf:"bytes,1,rep,name=racks,proto3" json:"racks,omitempty"`
}

func (x *HardwareCreateRackRequest) Reset() {
	*x = HardwareCreateRackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_hardware_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HardwareCreateRackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareCreateRackRequest) ProtoMessage() {}

func (x *HardwareCreateRackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_hardware_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareCreateRackRequest.ProtoReflect.Descriptor instead.
func (*HardwareCreateRackRequest) Descriptor() ([]byte, []int) {
	return file_v1_hardware_proto_rawDescGZIP(), []int{1}
}

func (x *HardwareCreateRackRequest) GetRacks() []*Rack {
	if x != nil {
		return x.Racks
	}
	return nil
}

type HardwareCreateRackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Racks []*Rack `protobuf:"bytes,1,rep,name=racks,proto3" json:"racks,omitempty"`
}

func (x *HardwareCreateRackResponse) Reset() {
	*x = HardwareCreateRackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_hardware_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HardwareCreateRackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareCreateRackResponse) ProtoMessage() {}

func (x *HardwareCreateRackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_hardware_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareCreateRackResponse.ProtoReflect.Descriptor instead.
func (*HardwareCreateRackResponse) Descriptor() ([]byte, []int) {
	return file_v1_hardware_proto_rawDescGZIP(), []int{2}
}

func (x *HardwareCreateRackResponse) GetRacks() []*Rack {
	if x != nil {
		return x.Racks
	}
	return nil
}

type HardwareRetrieveRackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []uint32 `protobuf:"varint,1,rep,packed,name=keys,proto3" json:"keys,omitempty"`
}

func (x *HardwareRetrieveRackRequest) Reset() {
	*x = HardwareRetrieveRackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_hardware_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HardwareRetrieveRackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareRetrieveRackRequest) ProtoMessage() {}

func (x *HardwareRetrieveRackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_hardware_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareRetrieveRackRequest.ProtoReflect.Descriptor instead.
func (*HardwareRetrieveRackRequest) Descriptor() ([]byte, []int) {
	return file_v1_hardware_proto_rawDescGZIP(), []int{3}
}

func (x *HardwareRetrieveRackRequest) GetKeys() []uint32 {
	if x != nil {
		return x.Keys
	}
	return nil
}

type HardwareRetrieveRackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Racks []*Rack `protobuf:"bytes,1,rep,name=racks,proto3" json:"racks,omitempty"`
}

func (x *HardwareRetrieveRackResponse) Reset() {
	*x = HardwareRetrieveRackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_hardware_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HardwareRetrieveRackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareRetrieveRackResponse) ProtoMessage() {}

func (x *HardwareRetrieveRackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_hardware_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareRetrieveRackResponse.ProtoReflect.Descriptor instead.
func (*HardwareRetrieveRackResponse) Descriptor() ([]byte, []int) {
	return file_v1_hardware_proto_rawDescGZIP(), []int{4}
}

func (x *HardwareRetrieveRackResponse) GetRacks() []*Rack {
	if x != nil {
		return x.Racks
	}
	return nil
}

type HardwareDeleteRackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []uint32 `protobuf:"varint,1,rep,packed,name=keys,proto3" json:"keys,omitempty"`
}

func (x *HardwareDeleteRackRequest) Reset() {
	*x = HardwareDeleteRackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_hardware_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HardwareDeleteRackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareDeleteRackRequest) ProtoMessage() {}

func (x *HardwareDeleteRackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_hardware_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareDeleteRackRequest.ProtoReflect.Descriptor instead.
func (*HardwareDeleteRackRequest) Descriptor() ([]byte, []int) {
	return file_v1_hardware_proto_rawDescGZIP(), []int{5}
}

func (x *HardwareDeleteRackRequest) GetKeys() []uint32 {
	if x != nil {
		return x.Keys
	}
	return nil
}

type Module struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    uint64 `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type   string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Config string `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *Module) Reset() {
	*x = Module{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_hardware_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module) ProtoMessage() {}

func (x *Module) ProtoReflect() protoreflect.Message {
	mi := &file_v1_hardware_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module.ProtoReflect.Descriptor instead.
func (*Module) Descriptor() ([]byte, []int) {
	return file_v1_hardware_proto_rawDescGZIP(), []int{6}
}

func (x *Module) GetKey() uint64 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *Module) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Module) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Module) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

type HardwareCreateModuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modules []*Module `protobuf:"bytes,1,rep,name=modules,proto3" json:"modules,omitempty"`
}

func (x *HardwareCreateModuleRequest) Reset() {
	*x = HardwareCreateModuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_hardware_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HardwareCreateModuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareCreateModuleRequest) ProtoMessage() {}

func (x *HardwareCreateModuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_hardware_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareCreateModuleRequest.ProtoReflect.Descriptor instead.
func (*HardwareCreateModuleRequest) Descriptor() ([]byte, []int) {
	return file_v1_hardware_proto_rawDescGZIP(), []int{7}
}

func (x *HardwareCreateModuleRequest) GetModules() []*Module {
	if x != nil {
		return x.Modules
	}
	return nil
}

type HardwareCreateModuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modules []*Module `protobuf:"bytes,1,rep,name=modules,proto3" json:"modules,omitempty"`
}

func (x *HardwareCreateModuleResponse) Reset() {
	*x = HardwareCreateModuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_hardware_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HardwareCreateModuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareCreateModuleResponse) ProtoMessage() {}

func (x *HardwareCreateModuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_hardware_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareCreateModuleResponse.ProtoReflect.Descriptor instead.
func (*HardwareCreateModuleResponse) Descriptor() ([]byte, []int) {
	return file_v1_hardware_proto_rawDescGZIP(), []int{8}
}

func (x *HardwareCreateModuleResponse) GetModules() []*Module {
	if x != nil {
		return x.Modules
	}
	return nil
}

type HardwareRetrieveModuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rack uint32   `protobuf:"varint,1,opt,name=rack,proto3" json:"rack,omitempty"`
	Keys []uint64 `protobuf:"varint,2,rep,packed,name=keys,proto3" json:"keys,omitempty"`
}

func (x *HardwareRetrieveModuleRequest) Reset() {
	*x = HardwareRetrieveModuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_hardware_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HardwareRetrieveModuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareRetrieveModuleRequest) ProtoMessage() {}

func (x *HardwareRetrieveModuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_hardware_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareRetrieveModuleRequest.ProtoReflect.Descriptor instead.
func (*HardwareRetrieveModuleRequest) Descriptor() ([]byte, []int) {
	return file_v1_hardware_proto_rawDescGZIP(), []int{9}
}

func (x *HardwareRetrieveModuleRequest) GetRack() uint32 {
	if x != nil {
		return x.Rack
	}
	return 0
}

func (x *HardwareRetrieveModuleRequest) GetKeys() []uint64 {
	if x != nil {
		return x.Keys
	}
	return nil
}

type HardwareRetrieveModuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modules []*Module `protobuf:"bytes,1,rep,name=modules,proto3" json:"modules,omitempty"`
}

func (x *HardwareRetrieveModuleResponse) Reset() {
	*x = HardwareRetrieveModuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_hardware_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HardwareRetrieveModuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareRetrieveModuleResponse) ProtoMessage() {}

func (x *HardwareRetrieveModuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_hardware_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareRetrieveModuleResponse.ProtoReflect.Descriptor instead.
func (*HardwareRetrieveModuleResponse) Descriptor() ([]byte, []int) {
	return file_v1_hardware_proto_rawDescGZIP(), []int{10}
}

func (x *HardwareRetrieveModuleResponse) GetModules() []*Module {
	if x != nil {
		return x.Modules
	}
	return nil
}

type HardwareDeleteModuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []uint64 `protobuf:"varint,1,rep,packed,name=keys,proto3" json:"keys,omitempty"`
}

func (x *HardwareDeleteModuleRequest) Reset() {
	*x = HardwareDeleteModuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_hardware_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HardwareDeleteModuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareDeleteModuleRequest) ProtoMessage() {}

func (x *HardwareDeleteModuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_hardware_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareDeleteModuleRequest.ProtoReflect.Descriptor instead.
func (*HardwareDeleteModuleRequest) Descriptor() ([]byte, []int) {
	return file_v1_hardware_proto_rawDescGZIP(), []int{11}
}

func (x *HardwareDeleteModuleRequest) GetKeys() []uint64 {
	if x != nil {
		return x.Keys
	}
	return nil
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Make       string `protobuf:"bytes,3,opt,name=make,proto3" json:"make,omitempty"`
	Model      string `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	Properties string `protobuf:"bytes,5,opt,name=properties,proto3" json:"properties,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_hardware_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_v1_hardware_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_v1_hardware_proto_rawDescGZIP(), []int{12}
}

func (x *Device) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Device) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Device) GetMake() string {
	if x != nil {
		return x.Make
	}
	return ""
}

func (x *Device) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Device) GetProperties() string {
	if x != nil {
		return x.Properties
	}
	return ""
}

type HardwareCreateDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Devices []*Device `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
}

func (x *HardwareCreateDeviceRequest) Reset() {
	*x = HardwareCreateDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_hardware_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HardwareCreateDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareCreateDeviceRequest) ProtoMessage() {}

func (x *HardwareCreateDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_hardware_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareCreateDeviceRequest.ProtoReflect.Descriptor instead.
func (*HardwareCreateDeviceRequest) Descriptor() ([]byte, []int) {
	return file_v1_hardware_proto_rawDescGZIP(), []int{13}
}

func (x *HardwareCreateDeviceRequest) GetDevices() []*Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

type HardwareCreateDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Devices []*Device `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
}

func (x *HardwareCreateDeviceResponse) Reset() {
	*x = HardwareCreateDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_hardware_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HardwareCreateDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareCreateDeviceResponse) ProtoMessage() {}

func (x *HardwareCreateDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_hardware_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareCreateDeviceResponse.ProtoReflect.Descriptor instead.
func (*HardwareCreateDeviceResponse) Descriptor() ([]byte, []int) {
	return file_v1_hardware_proto_rawDescGZIP(), []int{14}
}

func (x *HardwareCreateDeviceResponse) GetDevices() []*Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

type HardwareRetrieveDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *HardwareRetrieveDeviceRequest) Reset() {
	*x = HardwareRetrieveDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_hardware_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HardwareRetrieveDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareRetrieveDeviceRequest) ProtoMessage() {}

func (x *HardwareRetrieveDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_hardware_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareRetrieveDeviceRequest.ProtoReflect.Descriptor instead.
func (*HardwareRetrieveDeviceRequest) Descriptor() ([]byte, []int) {
	return file_v1_hardware_proto_rawDescGZIP(), []int{15}
}

func (x *HardwareRetrieveDeviceRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type HardwareRetrieveDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Devices []*Device `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
}

func (x *HardwareRetrieveDeviceResponse) Reset() {
	*x = HardwareRetrieveDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_hardware_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HardwareRetrieveDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareRetrieveDeviceResponse) ProtoMessage() {}

func (x *HardwareRetrieveDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_hardware_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareRetrieveDeviceResponse.ProtoReflect.Descriptor instead.
func (*HardwareRetrieveDeviceResponse) Descriptor() ([]byte, []int) {
	return file_v1_hardware_proto_rawDescGZIP(), []int{16}
}

func (x *HardwareRetrieveDeviceResponse) GetDevices() []*Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

type HardwareDeleteDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *HardwareDeleteDeviceRequest) Reset() {
	*x = HardwareDeleteDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_hardware_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HardwareDeleteDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareDeleteDeviceRequest) ProtoMessage() {}

func (x *HardwareDeleteDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_hardware_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareDeleteDeviceRequest.ProtoReflect.Descriptor instead.
func (*HardwareDeleteDeviceRequest) Descriptor() ([]byte, []int) {
	return file_v1_hardware_proto_rawDescGZIP(), []int{17}
}

func (x *HardwareDeleteDeviceRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

var File_v1_hardware_proto protoreflect.FileDescriptor

var file_v1_hardware_proto_rawDesc = []byte{
	0x0a, 0x11, 0x76, 0x31, 0x2f, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2c, 0x0a, 0x04, 0x52, 0x61, 0x63, 0x6b,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3f, 0x0a, 0x19, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61,
	0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x63, 0x6b,
	0x52, 0x05, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x22, 0x40, 0x0a, 0x1a, 0x48, 0x61, 0x72, 0x64, 0x77,
	0x61, 0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61,
	0x63, 0x6b, 0x52, 0x05, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x22, 0x31, 0x0a, 0x1b, 0x48, 0x61, 0x72,
	0x64, 0x77, 0x61, 0x72, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x61, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x42, 0x0a, 0x1c,
	0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x52, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05,
	0x72, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x63, 0x6b, 0x52, 0x05, 0x72, 0x61, 0x63, 0x6b, 0x73,
	0x22, 0x2f, 0x0a, 0x19, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x6b, 0x65, 0x79,
	0x73, 0x22, 0x5a, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x47, 0x0a,
	0x1b, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x07,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x07, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x48, 0x0a, 0x1c, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61,
	0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73,
	0x22, 0x47, 0x0a, 0x1d, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x4a, 0x0a, 0x1e, 0x48, 0x61, 0x72,
	0x64, 0x77, 0x61, 0x72, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x07, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x31, 0x0a, 0x1b, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x78, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x6b, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x6b, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x22, 0x47, 0x0a, 0x1b, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x48, 0x0a, 0x1c, 0x48,
	0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x33, 0x0a, 0x1d, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72,
	0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x4a, 0x0a, 0x1e, 0x48, 0x61,
	0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x07,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x31, 0x0a, 0x1b, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61,
	0x72, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x32, 0x70, 0x0a, 0x1b, 0x48, 0x61, 0x72,
	0x64, 0x77, 0x61, 0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x04, 0x45, 0x78, 0x65, 0x63,
	0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61,
	0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x48,
	0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x76, 0x0a, 0x1d, 0x48,
	0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x04,
	0x45, 0x78, 0x65, 0x63, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61,
	0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0x62, 0x0a, 0x1b, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x45, 0x78, 0x65, 0x63, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x6a, 0x0a, 0x19, 0x48, 0x61, 0x72, 0x64, 0x77,
	0x61, 0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x63, 0x6b, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x04, 0x45, 0x78, 0x65, 0x63, 0x12, 0x21, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0x70, 0x0a, 0x1b, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x61, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x51, 0x0a, 0x04, 0x45, 0x78, 0x65, 0x63, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x52, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72,
	0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x5e, 0x0a, 0x19, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x45, 0x78, 0x65, 0x63, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x70, 0x0a, 0x1b, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x04, 0x45, 0x78, 0x65, 0x63, 0x12, 0x23, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77,
	0x61, 0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x76, 0x0a, 0x1d, 0x48, 0x61, 0x72, 0x64, 0x77,
	0x61, 0x72, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x04, 0x45, 0x78, 0x65, 0x63,
	0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61,
	0x72, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0x62, 0x0a, 0x1b, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43,
	0x0a, 0x04, 0x45, 0x78, 0x65, 0x63, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x42, 0x88, 0x01, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x42, 0x0d, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x79, 0x6e, 0x6e, 0x61, 0x78, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x73, 0x79, 0x6e, 0x6e, 0x61,
	0x78, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x76,
	0x31, 0x3b, 0x61, 0x70, 0x69, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x58, 0x58, 0xaa, 0x02, 0x06,
	0x41, 0x70, 0x69, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x06, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0xe2,
	0x02, 0x12, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x07, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_hardware_proto_rawDescOnce sync.Once
	file_v1_hardware_proto_rawDescData = file_v1_hardware_proto_rawDesc
)

func file_v1_hardware_proto_rawDescGZIP() []byte {
	file_v1_hardware_proto_rawDescOnce.Do(func() {
		file_v1_hardware_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_hardware_proto_rawDescData)
	})
	return file_v1_hardware_proto_rawDescData
}

var file_v1_hardware_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_v1_hardware_proto_goTypes = []interface{}{
	(*Rack)(nil),                           // 0: api.v1.Rack
	(*HardwareCreateRackRequest)(nil),      // 1: api.v1.HardwareCreateRackRequest
	(*HardwareCreateRackResponse)(nil),     // 2: api.v1.HardwareCreateRackResponse
	(*HardwareRetrieveRackRequest)(nil),    // 3: api.v1.HardwareRetrieveRackRequest
	(*HardwareRetrieveRackResponse)(nil),   // 4: api.v1.HardwareRetrieveRackResponse
	(*HardwareDeleteRackRequest)(nil),      // 5: api.v1.HardwareDeleteRackRequest
	(*Module)(nil),                         // 6: api.v1.Module
	(*HardwareCreateModuleRequest)(nil),    // 7: api.v1.HardwareCreateModuleRequest
	(*HardwareCreateModuleResponse)(nil),   // 8: api.v1.HardwareCreateModuleResponse
	(*HardwareRetrieveModuleRequest)(nil),  // 9: api.v1.HardwareRetrieveModuleRequest
	(*HardwareRetrieveModuleResponse)(nil), // 10: api.v1.HardwareRetrieveModuleResponse
	(*HardwareDeleteModuleRequest)(nil),    // 11: api.v1.HardwareDeleteModuleRequest
	(*Device)(nil),                         // 12: api.v1.Device
	(*HardwareCreateDeviceRequest)(nil),    // 13: api.v1.HardwareCreateDeviceRequest
	(*HardwareCreateDeviceResponse)(nil),   // 14: api.v1.HardwareCreateDeviceResponse
	(*HardwareRetrieveDeviceRequest)(nil),  // 15: api.v1.HardwareRetrieveDeviceRequest
	(*HardwareRetrieveDeviceResponse)(nil), // 16: api.v1.HardwareRetrieveDeviceResponse
	(*HardwareDeleteDeviceRequest)(nil),    // 17: api.v1.HardwareDeleteDeviceRequest
	(*emptypb.Empty)(nil),                  // 18: google.protobuf.Empty
}
var file_v1_hardware_proto_depIdxs = []int32{
	0,  // 0: api.v1.HardwareCreateRackRequest.racks:type_name -> api.v1.Rack
	0,  // 1: api.v1.HardwareCreateRackResponse.racks:type_name -> api.v1.Rack
	0,  // 2: api.v1.HardwareRetrieveRackResponse.racks:type_name -> api.v1.Rack
	6,  // 3: api.v1.HardwareCreateModuleRequest.modules:type_name -> api.v1.Module
	6,  // 4: api.v1.HardwareCreateModuleResponse.modules:type_name -> api.v1.Module
	6,  // 5: api.v1.HardwareRetrieveModuleResponse.modules:type_name -> api.v1.Module
	12, // 6: api.v1.HardwareCreateDeviceRequest.devices:type_name -> api.v1.Device
	12, // 7: api.v1.HardwareCreateDeviceResponse.devices:type_name -> api.v1.Device
	12, // 8: api.v1.HardwareRetrieveDeviceResponse.devices:type_name -> api.v1.Device
	7,  // 9: api.v1.HardwareCreateModuleService.Exec:input_type -> api.v1.HardwareCreateModuleRequest
	9,  // 10: api.v1.HardwareRetrieveModuleService.Exec:input_type -> api.v1.HardwareRetrieveModuleRequest
	11, // 11: api.v1.HardwareDeleteModuleService.Exec:input_type -> api.v1.HardwareDeleteModuleRequest
	1,  // 12: api.v1.HardwareCreateRackService.Exec:input_type -> api.v1.HardwareCreateRackRequest
	3,  // 13: api.v1.HardwareRetrieveRackService.Exec:input_type -> api.v1.HardwareRetrieveRackRequest
	5,  // 14: api.v1.HardwareDeleteRackService.Exec:input_type -> api.v1.HardwareDeleteRackRequest
	13, // 15: api.v1.HardwareCreateDeviceService.Exec:input_type -> api.v1.HardwareCreateDeviceRequest
	15, // 16: api.v1.HardwareRetrieveDeviceService.Exec:input_type -> api.v1.HardwareRetrieveDeviceRequest
	17, // 17: api.v1.HardwareDeleteDeviceService.Exec:input_type -> api.v1.HardwareDeleteDeviceRequest
	8,  // 18: api.v1.HardwareCreateModuleService.Exec:output_type -> api.v1.HardwareCreateModuleResponse
	10, // 19: api.v1.HardwareRetrieveModuleService.Exec:output_type -> api.v1.HardwareRetrieveModuleResponse
	18, // 20: api.v1.HardwareDeleteModuleService.Exec:output_type -> google.protobuf.Empty
	2,  // 21: api.v1.HardwareCreateRackService.Exec:output_type -> api.v1.HardwareCreateRackResponse
	4,  // 22: api.v1.HardwareRetrieveRackService.Exec:output_type -> api.v1.HardwareRetrieveRackResponse
	18, // 23: api.v1.HardwareDeleteRackService.Exec:output_type -> google.protobuf.Empty
	14, // 24: api.v1.HardwareCreateDeviceService.Exec:output_type -> api.v1.HardwareCreateDeviceResponse
	16, // 25: api.v1.HardwareRetrieveDeviceService.Exec:output_type -> api.v1.HardwareRetrieveDeviceResponse
	18, // 26: api.v1.HardwareDeleteDeviceService.Exec:output_type -> google.protobuf.Empty
	18, // [18:27] is the sub-list for method output_type
	9,  // [9:18] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_v1_hardware_proto_init() }
func file_v1_hardware_proto_init() {
	if File_v1_hardware_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_hardware_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_hardware_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HardwareCreateRackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_hardware_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HardwareCreateRackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_hardware_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HardwareRetrieveRackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_hardware_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HardwareRetrieveRackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_hardware_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HardwareDeleteRackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_hardware_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_hardware_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HardwareCreateModuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_hardware_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HardwareCreateModuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_hardware_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HardwareRetrieveModuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_hardware_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HardwareRetrieveModuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_hardware_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HardwareDeleteModuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_hardware_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_hardware_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HardwareCreateDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_hardware_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HardwareCreateDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_hardware_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HardwareRetrieveDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_hardware_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HardwareRetrieveDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_hardware_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HardwareDeleteDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_hardware_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   9,
		},
		GoTypes:           file_v1_hardware_proto_goTypes,
		DependencyIndexes: file_v1_hardware_proto_depIdxs,
		MessageInfos:      file_v1_hardware_proto_msgTypes,
	}.Build()
	File_v1_hardware_proto = out.File
	file_v1_hardware_proto_rawDesc = nil
	file_v1_hardware_proto_goTypes = nil
	file_v1_hardware_proto_depIdxs = nil
}
