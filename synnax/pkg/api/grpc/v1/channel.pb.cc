// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v1/channel.proto

#include "v1/channel.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace api {
namespace v1 {
        template <typename>
PROTOBUF_CONSTEXPR Channel::Channel(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.data_type_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.key_)*/ 0u,
      /*decltype(_impl_.leaseholder_)*/ 0u,
      /*decltype(_impl_.rate_)*/ 0,
      /*decltype(_impl_.is_index_)*/ false,
      /*decltype(_impl_.density_)*/ ::int64_t{0},
      /*decltype(_impl_.index_)*/ 0u,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct ChannelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelDefaultTypeInternal() {}
  union {
    Channel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelDefaultTypeInternal _Channel_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ChannelRetrieveRequest::ChannelRetrieveRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.keys_)*/ {},
      /* _impl_._keys_cached_byte_size_ = */ {0},
      /*decltype(_impl_.names_)*/ {},
      /*decltype(_impl_.search_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.node_key_)*/ 0u,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct ChannelRetrieveRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelRetrieveRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelRetrieveRequestDefaultTypeInternal() {}
  union {
    ChannelRetrieveRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelRetrieveRequestDefaultTypeInternal _ChannelRetrieveRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ChannelRetrieveResponse::ChannelRetrieveResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.channels_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct ChannelRetrieveResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelRetrieveResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelRetrieveResponseDefaultTypeInternal() {}
  union {
    ChannelRetrieveResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelRetrieveResponseDefaultTypeInternal _ChannelRetrieveResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ChannelCreateRequest::ChannelCreateRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.channels_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct ChannelCreateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelCreateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelCreateRequestDefaultTypeInternal() {}
  union {
    ChannelCreateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelCreateRequestDefaultTypeInternal _ChannelCreateRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ChannelCreateResponse::ChannelCreateResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.channels_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct ChannelCreateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelCreateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelCreateResponseDefaultTypeInternal() {}
  union {
    ChannelCreateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelCreateResponseDefaultTypeInternal _ChannelCreateResponse_default_instance_;
}  // namespace v1
}  // namespace api
static ::_pb::Metadata file_level_metadata_v1_2fchannel_2eproto[5];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_v1_2fchannel_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_v1_2fchannel_2eproto = nullptr;
const ::uint32_t TableStruct_v1_2fchannel_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::api::v1::Channel, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::api::v1::Channel, _impl_.key_),
    PROTOBUF_FIELD_OFFSET(::api::v1::Channel, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::api::v1::Channel, _impl_.leaseholder_),
    PROTOBUF_FIELD_OFFSET(::api::v1::Channel, _impl_.rate_),
    PROTOBUF_FIELD_OFFSET(::api::v1::Channel, _impl_.data_type_),
    PROTOBUF_FIELD_OFFSET(::api::v1::Channel, _impl_.density_),
    PROTOBUF_FIELD_OFFSET(::api::v1::Channel, _impl_.is_index_),
    PROTOBUF_FIELD_OFFSET(::api::v1::Channel, _impl_.index_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::api::v1::ChannelRetrieveRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::api::v1::ChannelRetrieveRequest, _impl_.node_key_),
    PROTOBUF_FIELD_OFFSET(::api::v1::ChannelRetrieveRequest, _impl_.keys_),
    PROTOBUF_FIELD_OFFSET(::api::v1::ChannelRetrieveRequest, _impl_.names_),
    PROTOBUF_FIELD_OFFSET(::api::v1::ChannelRetrieveRequest, _impl_.search_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::api::v1::ChannelRetrieveResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::api::v1::ChannelRetrieveResponse, _impl_.channels_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::api::v1::ChannelCreateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::api::v1::ChannelCreateRequest, _impl_.channels_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::api::v1::ChannelCreateResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::api::v1::ChannelCreateResponse, _impl_.channels_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::api::v1::Channel)},
        {16, -1, -1, sizeof(::api::v1::ChannelRetrieveRequest)},
        {28, -1, -1, sizeof(::api::v1::ChannelRetrieveResponse)},
        {37, -1, -1, sizeof(::api::v1::ChannelCreateRequest)},
        {46, -1, -1, sizeof(::api::v1::ChannelCreateResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::api::v1::_Channel_default_instance_._instance,
    &::api::v1::_ChannelRetrieveRequest_default_instance_._instance,
    &::api::v1::_ChannelRetrieveResponse_default_instance_._instance,
    &::api::v1::_ChannelCreateRequest_default_instance_._instance,
    &::api::v1::_ChannelCreateResponse_default_instance_._instance,
};
const char descriptor_table_protodef_v1_2fchannel_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\020v1/channel.proto\022\006api.v1\"\315\001\n\007Channel\022\020"
    "\n\003key\030\001 \001(\rR\003key\022\022\n\004name\030\002 \001(\tR\004name\022 \n\013"
    "leaseholder\030\003 \001(\rR\013leaseholder\022\022\n\004rate\030\004"
    " \001(\002R\004rate\022\033\n\tdata_type\030\005 \001(\tR\010dataType\022"
    "\030\n\007density\030\006 \001(\003R\007density\022\031\n\010is_index\030\007 "
    "\001(\010R\007isIndex\022\024\n\005index\030\010 \001(\rR\005index\"u\n\026Ch"
    "annelRetrieveRequest\022\031\n\010node_key\030\001 \001(\rR\007"
    "nodeKey\022\022\n\004keys\030\002 \003(\rR\004keys\022\024\n\005names\030\003 \003"
    "(\tR\005names\022\026\n\006search\030\004 \001(\tR\006search\"F\n\027Cha"
    "nnelRetrieveResponse\022+\n\010channels\030\001 \003(\0132\017"
    ".api.v1.ChannelR\010channels\"C\n\024ChannelCrea"
    "teRequest\022+\n\010channels\030\001 \003(\0132\017.api.v1.Cha"
    "nnelR\010channels\"D\n\025ChannelCreateResponse\022"
    "+\n\010channels\030\001 \003(\0132\017.api.v1.ChannelR\010chan"
    "nels2]\n\024ChannelCreateService\022E\n\004Exec\022\034.a"
    "pi.v1.ChannelCreateRequest\032\035.api.v1.Chan"
    "nelCreateResponse\"\0002c\n\026ChannelRetrieveSe"
    "rvice\022I\n\004Exec\022\036.api.v1.ChannelRetrieveRe"
    "quest\032\037.api.v1.ChannelRetrieveResponse\"\000"
    "B\207\001\n\ncom.api.v1B\014ChannelProtoP\001Z2github."
    "com/synnaxlabs/synnax/pkg/api/grpc/v1;ap"
    "iv1\242\002\003AXX\252\002\006Api.V1\312\002\006Api\\V1\342\002\022Api\\V1\\GPB"
    "Metadata\352\002\007Api::V1b\006proto3"
};
static ::absl::once_flag descriptor_table_v1_2fchannel_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_v1_2fchannel_2eproto = {
    false,
    false,
    906,
    descriptor_table_protodef_v1_2fchannel_2eproto,
    "v1/channel.proto",
    &descriptor_table_v1_2fchannel_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_v1_2fchannel_2eproto::offsets,
    file_level_metadata_v1_2fchannel_2eproto,
    file_level_enum_descriptors_v1_2fchannel_2eproto,
    file_level_service_descriptors_v1_2fchannel_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_v1_2fchannel_2eproto_getter() {
  return &descriptor_table_v1_2fchannel_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_v1_2fchannel_2eproto(&descriptor_table_v1_2fchannel_2eproto);
namespace api {
namespace v1 {
// ===================================================================

class Channel::_Internal {
 public:
};

Channel::Channel(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1.Channel)
}
Channel::Channel(const Channel& from) : ::google::protobuf::Message() {
  Channel* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){},
      decltype(_impl_.data_type_){},
      decltype(_impl_.key_){},
      decltype(_impl_.leaseholder_){},
      decltype(_impl_.rate_){},
      decltype(_impl_.is_index_){},
      decltype(_impl_.density_){},
      decltype(_impl_.index_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.data_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data_type().empty()) {
    _this->_impl_.data_type_.Set(from._internal_data_type(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.key_, &from._impl_.key_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.index_) -
    reinterpret_cast<char*>(&_impl_.key_)) + sizeof(_impl_.index_));

  // @@protoc_insertion_point(copy_constructor:api.v1.Channel)
}
inline void Channel::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){},
      decltype(_impl_.data_type_){},
      decltype(_impl_.key_){0u},
      decltype(_impl_.leaseholder_){0u},
      decltype(_impl_.rate_){0},
      decltype(_impl_.is_index_){false},
      decltype(_impl_.density_){::int64_t{0}},
      decltype(_impl_.index_){0u},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.data_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Channel::~Channel() {
  // @@protoc_insertion_point(destructor:api.v1.Channel)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Channel::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.data_type_.Destroy();
}
void Channel::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Channel::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1.Channel)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.data_type_.ClearToEmpty();
  ::memset(&_impl_.key_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.index_) -
      reinterpret_cast<char*>(&_impl_.key_)) + sizeof(_impl_.index_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Channel::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 44, 2> Channel::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Channel_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 index = 8 [json_name = "index"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Channel, _impl_.index_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Channel, _impl_.index_)}},
    // uint32 key = 1 [json_name = "key"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Channel, _impl_.key_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Channel, _impl_.key_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Channel, _impl_.name_)}},
    // uint32 leaseholder = 3 [json_name = "leaseholder"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Channel, _impl_.leaseholder_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Channel, _impl_.leaseholder_)}},
    // float rate = 4 [json_name = "rate"];
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(Channel, _impl_.rate_)}},
    // string data_type = 5 [json_name = "dataType"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Channel, _impl_.data_type_)}},
    // int64 density = 6 [json_name = "density"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Channel, _impl_.density_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Channel, _impl_.density_)}},
    // bool is_index = 7 [json_name = "isIndex"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Channel, _impl_.is_index_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Channel, _impl_.is_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(Channel, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(Channel, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 leaseholder = 3 [json_name = "leaseholder"];
    {PROTOBUF_FIELD_OFFSET(Channel, _impl_.leaseholder_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // float rate = 4 [json_name = "rate"];
    {PROTOBUF_FIELD_OFFSET(Channel, _impl_.rate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // string data_type = 5 [json_name = "dataType"];
    {PROTOBUF_FIELD_OFFSET(Channel, _impl_.data_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 density = 6 [json_name = "density"];
    {PROTOBUF_FIELD_OFFSET(Channel, _impl_.density_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bool is_index = 7 [json_name = "isIndex"];
    {PROTOBUF_FIELD_OFFSET(Channel, _impl_.is_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint32 index = 8 [json_name = "index"];
    {PROTOBUF_FIELD_OFFSET(Channel, _impl_.index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\16\0\4\0\0\11\0\0\0\0\0\0\0\0\0\0"
    "api.v1.Channel"
    "name"
    "data_type"
  }},
};

::uint8_t* Channel::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.v1.Channel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 key = 1 [json_name = "key"];
  if (this->_internal_key() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_key(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1.Channel.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // uint32 leaseholder = 3 [json_name = "leaseholder"];
  if (this->_internal_leaseholder() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_leaseholder(), target);
  }

  // float rate = 4 [json_name = "rate"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_rate = this->_internal_rate();
  ::uint32_t raw_rate;
  memcpy(&raw_rate, &tmp_rate, sizeof(tmp_rate));
  if (raw_rate != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_rate(), target);
  }

  // string data_type = 5 [json_name = "dataType"];
  if (!this->_internal_data_type().empty()) {
    const std::string& _s = this->_internal_data_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1.Channel.data_type");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // int64 density = 6 [json_name = "density"];
  if (this->_internal_density() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<6>(
            stream, this->_internal_density(), target);
  }

  // bool is_index = 7 [json_name = "isIndex"];
  if (this->_internal_is_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        7, this->_internal_is_index(), target);
  }

  // uint32 index = 8 [json_name = "index"];
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1.Channel)
  return target;
}

::size_t Channel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.v1.Channel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string data_type = 5 [json_name = "dataType"];
  if (!this->_internal_data_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_data_type());
  }

  // uint32 key = 1 [json_name = "key"];
  if (this->_internal_key() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_key());
  }

  // uint32 leaseholder = 3 [json_name = "leaseholder"];
  if (this->_internal_leaseholder() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_leaseholder());
  }

  // float rate = 4 [json_name = "rate"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_rate = this->_internal_rate();
  ::uint32_t raw_rate;
  memcpy(&raw_rate, &tmp_rate, sizeof(tmp_rate));
  if (raw_rate != 0) {
    total_size += 5;
  }

  // bool is_index = 7 [json_name = "isIndex"];
  if (this->_internal_is_index() != 0) {
    total_size += 2;
  }

  // int64 density = 6 [json_name = "density"];
  if (this->_internal_density() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_density());
  }

  // uint32 index = 8 [json_name = "index"];
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Channel::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Channel::MergeImpl
};
const ::google::protobuf::Message::ClassData*Channel::GetClassData() const { return &_class_data_; }


void Channel::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Channel*>(&to_msg);
  auto& from = static_cast<const Channel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1.Channel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_data_type().empty()) {
    _this->_internal_set_data_type(from._internal_data_type());
  }
  if (from._internal_key() != 0) {
    _this->_internal_set_key(from._internal_key());
  }
  if (from._internal_leaseholder() != 0) {
    _this->_internal_set_leaseholder(from._internal_leaseholder());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_rate = from._internal_rate();
  ::uint32_t raw_rate;
  memcpy(&raw_rate, &tmp_rate, sizeof(tmp_rate));
  if (raw_rate != 0) {
    _this->_internal_set_rate(from._internal_rate());
  }
  if (from._internal_is_index() != 0) {
    _this->_internal_set_is_index(from._internal_is_index());
  }
  if (from._internal_density() != 0) {
    _this->_internal_set_density(from._internal_density());
  }
  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Channel::CopyFrom(const Channel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1.Channel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Channel::IsInitialized() const {
  return true;
}

void Channel::InternalSwap(Channel* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_type_, lhs_arena,
                                       &other->_impl_.data_type_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Channel, _impl_.index_)
      + sizeof(Channel::_impl_.index_)
      - PROTOBUF_FIELD_OFFSET(Channel, _impl_.key_)>(
          reinterpret_cast<char*>(&_impl_.key_),
          reinterpret_cast<char*>(&other->_impl_.key_));
}

::google::protobuf::Metadata Channel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_v1_2fchannel_2eproto_getter, &descriptor_table_v1_2fchannel_2eproto_once,
      file_level_metadata_v1_2fchannel_2eproto[0]);
}
// ===================================================================

class ChannelRetrieveRequest::_Internal {
 public:
};

ChannelRetrieveRequest::ChannelRetrieveRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1.ChannelRetrieveRequest)
}
ChannelRetrieveRequest::ChannelRetrieveRequest(const ChannelRetrieveRequest& from) : ::google::protobuf::Message() {
  ChannelRetrieveRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.keys_){from._impl_.keys_},
      /* _impl_._keys_cached_byte_size_ = */ {0},
      decltype(_impl_.names_){from._impl_.names_},
      decltype(_impl_.search_){},
      decltype(_impl_.node_key_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.search_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.search_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_search().empty()) {
    _this->_impl_.search_.Set(from._internal_search(), _this->GetArenaForAllocation());
  }
  _this->_impl_.node_key_ = from._impl_.node_key_;

  // @@protoc_insertion_point(copy_constructor:api.v1.ChannelRetrieveRequest)
}
inline void ChannelRetrieveRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.keys_){arena},
      /* _impl_._keys_cached_byte_size_ = */ {0},
      decltype(_impl_.names_){arena},
      decltype(_impl_.search_){},
      decltype(_impl_.node_key_){0u},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.search_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.search_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
ChannelRetrieveRequest::~ChannelRetrieveRequest() {
  // @@protoc_insertion_point(destructor:api.v1.ChannelRetrieveRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChannelRetrieveRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.keys_.~RepeatedField();
  _internal_mutable_names()->~RepeatedPtrField();
  _impl_.search_.Destroy();
}
void ChannelRetrieveRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ChannelRetrieveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1.ChannelRetrieveRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_keys()->Clear();
  _internal_mutable_names()->Clear();
  _impl_.search_.ClearToEmpty();
  _impl_.node_key_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ChannelRetrieveRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 49, 2> ChannelRetrieveRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ChannelRetrieveRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string search = 4 [json_name = "search"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ChannelRetrieveRequest, _impl_.search_)}},
    // uint32 node_key = 1 [json_name = "nodeKey"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChannelRetrieveRequest, _impl_.node_key_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ChannelRetrieveRequest, _impl_.node_key_)}},
    // repeated uint32 keys = 2 [json_name = "keys"];
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ChannelRetrieveRequest, _impl_.keys_)}},
    // repeated string names = 3 [json_name = "names"];
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ChannelRetrieveRequest, _impl_.names_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 node_key = 1 [json_name = "nodeKey"];
    {PROTOBUF_FIELD_OFFSET(ChannelRetrieveRequest, _impl_.node_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated uint32 keys = 2 [json_name = "keys"];
    {PROTOBUF_FIELD_OFFSET(ChannelRetrieveRequest, _impl_.keys_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // repeated string names = 3 [json_name = "names"];
    {PROTOBUF_FIELD_OFFSET(ChannelRetrieveRequest, _impl_.names_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string search = 4 [json_name = "search"];
    {PROTOBUF_FIELD_OFFSET(ChannelRetrieveRequest, _impl_.search_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\0\0\5\6\0\0\0"
    "api.v1.ChannelRetrieveRequest"
    "names"
    "search"
  }},
};

::uint8_t* ChannelRetrieveRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.v1.ChannelRetrieveRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 node_key = 1 [json_name = "nodeKey"];
  if (this->_internal_node_key() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_node_key(), target);
  }

  // repeated uint32 keys = 2 [json_name = "keys"];
  {
    int byte_size = _impl_._keys_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(2, _internal_keys(),
                                                 byte_size, target);
    }
  }

  // repeated string names = 3 [json_name = "names"];
  for (int i = 0, n = this->_internal_names_size(); i < n; ++i) {
    const auto& s = this->_internal_names().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1.ChannelRetrieveRequest.names");
    target = stream->WriteString(3, s, target);
  }

  // string search = 4 [json_name = "search"];
  if (!this->_internal_search().empty()) {
    const std::string& _s = this->_internal_search();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1.ChannelRetrieveRequest.search");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1.ChannelRetrieveRequest)
  return target;
}

::size_t ChannelRetrieveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.v1.ChannelRetrieveRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 keys = 2 [json_name = "keys"];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_keys())
    ;
    _impl_._keys_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated string names = 3 [json_name = "names"];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_names().size());
  for (int i = 0, n = _internal_names().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_names().Get(i));
  }
  // string search = 4 [json_name = "search"];
  if (!this->_internal_search().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_search());
  }

  // uint32 node_key = 1 [json_name = "nodeKey"];
  if (this->_internal_node_key() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_node_key());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ChannelRetrieveRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ChannelRetrieveRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*ChannelRetrieveRequest::GetClassData() const { return &_class_data_; }


void ChannelRetrieveRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ChannelRetrieveRequest*>(&to_msg);
  auto& from = static_cast<const ChannelRetrieveRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1.ChannelRetrieveRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_keys()->MergeFrom(from._internal_keys());
  _this->_internal_mutable_names()->MergeFrom(from._internal_names());
  if (!from._internal_search().empty()) {
    _this->_internal_set_search(from._internal_search());
  }
  if (from._internal_node_key() != 0) {
    _this->_internal_set_node_key(from._internal_node_key());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelRetrieveRequest::CopyFrom(const ChannelRetrieveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1.ChannelRetrieveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ChannelRetrieveRequest::IsInitialized() const {
  return true;
}

void ChannelRetrieveRequest::InternalSwap(ChannelRetrieveRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.keys_.InternalSwap(&other->_impl_.keys_);
  _impl_.names_.InternalSwap(&other->_impl_.names_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.search_, lhs_arena,
                                       &other->_impl_.search_, rhs_arena);
        swap(_impl_.node_key_, other->_impl_.node_key_);
}

::google::protobuf::Metadata ChannelRetrieveRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_v1_2fchannel_2eproto_getter, &descriptor_table_v1_2fchannel_2eproto_once,
      file_level_metadata_v1_2fchannel_2eproto[1]);
}
// ===================================================================

class ChannelRetrieveResponse::_Internal {
 public:
};

ChannelRetrieveResponse::ChannelRetrieveResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1.ChannelRetrieveResponse)
}
ChannelRetrieveResponse::ChannelRetrieveResponse(const ChannelRetrieveResponse& from) : ::google::protobuf::Message() {
  ChannelRetrieveResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.channels_){from._impl_.channels_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:api.v1.ChannelRetrieveResponse)
}
inline void ChannelRetrieveResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.channels_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
ChannelRetrieveResponse::~ChannelRetrieveResponse() {
  // @@protoc_insertion_point(destructor:api.v1.ChannelRetrieveResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChannelRetrieveResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.channels_.~RepeatedPtrField();
}
void ChannelRetrieveResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ChannelRetrieveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1.ChannelRetrieveResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_channels()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ChannelRetrieveResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ChannelRetrieveResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ChannelRetrieveResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .api.v1.Channel channels = 1 [json_name = "channels"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ChannelRetrieveResponse, _impl_.channels_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .api.v1.Channel channels = 1 [json_name = "channels"];
    {PROTOBUF_FIELD_OFFSET(ChannelRetrieveResponse, _impl_.channels_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::api::v1::Channel>()},
  }}, {{
  }},
};

::uint8_t* ChannelRetrieveResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.v1.ChannelRetrieveResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .api.v1.Channel channels = 1 [json_name = "channels"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_channels_size()); i < n; i++) {
    const auto& repfield = this->_internal_channels().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1.ChannelRetrieveResponse)
  return target;
}

::size_t ChannelRetrieveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.v1.ChannelRetrieveResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .api.v1.Channel channels = 1 [json_name = "channels"];
  total_size += 1UL * this->_internal_channels_size();
  for (const auto& msg : this->_internal_channels()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ChannelRetrieveResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ChannelRetrieveResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*ChannelRetrieveResponse::GetClassData() const { return &_class_data_; }


void ChannelRetrieveResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ChannelRetrieveResponse*>(&to_msg);
  auto& from = static_cast<const ChannelRetrieveResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1.ChannelRetrieveResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_channels()->MergeFrom(from._internal_channels());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelRetrieveResponse::CopyFrom(const ChannelRetrieveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1.ChannelRetrieveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ChannelRetrieveResponse::IsInitialized() const {
  return true;
}

void ChannelRetrieveResponse::InternalSwap(ChannelRetrieveResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.channels_.InternalSwap(&other->_impl_.channels_);
}

::google::protobuf::Metadata ChannelRetrieveResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_v1_2fchannel_2eproto_getter, &descriptor_table_v1_2fchannel_2eproto_once,
      file_level_metadata_v1_2fchannel_2eproto[2]);
}
// ===================================================================

class ChannelCreateRequest::_Internal {
 public:
};

ChannelCreateRequest::ChannelCreateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1.ChannelCreateRequest)
}
ChannelCreateRequest::ChannelCreateRequest(const ChannelCreateRequest& from) : ::google::protobuf::Message() {
  ChannelCreateRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.channels_){from._impl_.channels_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:api.v1.ChannelCreateRequest)
}
inline void ChannelCreateRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.channels_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
ChannelCreateRequest::~ChannelCreateRequest() {
  // @@protoc_insertion_point(destructor:api.v1.ChannelCreateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChannelCreateRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.channels_.~RepeatedPtrField();
}
void ChannelCreateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ChannelCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1.ChannelCreateRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_channels()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ChannelCreateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ChannelCreateRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ChannelCreateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .api.v1.Channel channels = 1 [json_name = "channels"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ChannelCreateRequest, _impl_.channels_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .api.v1.Channel channels = 1 [json_name = "channels"];
    {PROTOBUF_FIELD_OFFSET(ChannelCreateRequest, _impl_.channels_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::api::v1::Channel>()},
  }}, {{
  }},
};

::uint8_t* ChannelCreateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.v1.ChannelCreateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .api.v1.Channel channels = 1 [json_name = "channels"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_channels_size()); i < n; i++) {
    const auto& repfield = this->_internal_channels().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1.ChannelCreateRequest)
  return target;
}

::size_t ChannelCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.v1.ChannelCreateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .api.v1.Channel channels = 1 [json_name = "channels"];
  total_size += 1UL * this->_internal_channels_size();
  for (const auto& msg : this->_internal_channels()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ChannelCreateRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ChannelCreateRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*ChannelCreateRequest::GetClassData() const { return &_class_data_; }


void ChannelCreateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ChannelCreateRequest*>(&to_msg);
  auto& from = static_cast<const ChannelCreateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1.ChannelCreateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_channels()->MergeFrom(from._internal_channels());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelCreateRequest::CopyFrom(const ChannelCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1.ChannelCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ChannelCreateRequest::IsInitialized() const {
  return true;
}

void ChannelCreateRequest::InternalSwap(ChannelCreateRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.channels_.InternalSwap(&other->_impl_.channels_);
}

::google::protobuf::Metadata ChannelCreateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_v1_2fchannel_2eproto_getter, &descriptor_table_v1_2fchannel_2eproto_once,
      file_level_metadata_v1_2fchannel_2eproto[3]);
}
// ===================================================================

class ChannelCreateResponse::_Internal {
 public:
};

ChannelCreateResponse::ChannelCreateResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1.ChannelCreateResponse)
}
ChannelCreateResponse::ChannelCreateResponse(const ChannelCreateResponse& from) : ::google::protobuf::Message() {
  ChannelCreateResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.channels_){from._impl_.channels_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:api.v1.ChannelCreateResponse)
}
inline void ChannelCreateResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.channels_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
ChannelCreateResponse::~ChannelCreateResponse() {
  // @@protoc_insertion_point(destructor:api.v1.ChannelCreateResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChannelCreateResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.channels_.~RepeatedPtrField();
}
void ChannelCreateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ChannelCreateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1.ChannelCreateResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_channels()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ChannelCreateResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ChannelCreateResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ChannelCreateResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .api.v1.Channel channels = 1 [json_name = "channels"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ChannelCreateResponse, _impl_.channels_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .api.v1.Channel channels = 1 [json_name = "channels"];
    {PROTOBUF_FIELD_OFFSET(ChannelCreateResponse, _impl_.channels_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::api::v1::Channel>()},
  }}, {{
  }},
};

::uint8_t* ChannelCreateResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.v1.ChannelCreateResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .api.v1.Channel channels = 1 [json_name = "channels"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_channels_size()); i < n; i++) {
    const auto& repfield = this->_internal_channels().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1.ChannelCreateResponse)
  return target;
}

::size_t ChannelCreateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.v1.ChannelCreateResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .api.v1.Channel channels = 1 [json_name = "channels"];
  total_size += 1UL * this->_internal_channels_size();
  for (const auto& msg : this->_internal_channels()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ChannelCreateResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ChannelCreateResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*ChannelCreateResponse::GetClassData() const { return &_class_data_; }


void ChannelCreateResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ChannelCreateResponse*>(&to_msg);
  auto& from = static_cast<const ChannelCreateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1.ChannelCreateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_channels()->MergeFrom(from._internal_channels());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelCreateResponse::CopyFrom(const ChannelCreateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1.ChannelCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ChannelCreateResponse::IsInitialized() const {
  return true;
}

void ChannelCreateResponse::InternalSwap(ChannelCreateResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.channels_.InternalSwap(&other->_impl_.channels_);
}

::google::protobuf::Metadata ChannelCreateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_v1_2fchannel_2eproto_getter, &descriptor_table_v1_2fchannel_2eproto_once,
      file_level_metadata_v1_2fchannel_2eproto[4]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace api
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
