syntax = "proto3";

import "x/go/telem/telem.proto";
import "x/go/errors/errors.proto";
import "x/go/control/control.proto";

option go_package = "github.com/synnaxlabs/synnax/pkg/api/grpc/v1";
package api.v1;


message Frame {
    repeated uint32 keys = 1;
    repeated telem.PBSeries series = 2;
}

service FrameIteratorService {
    rpc Exec(stream FrameIteratorRequest) returns (stream FrameIteratorResponse) {}
}

service FrameWriterService {
    rpc Exec(stream FrameWriterRequest) returns (stream FrameWriterResponse) {}
}

service FrameStreamerService {
    rpc Exec(stream FrameStreamerRequest) returns (stream FrameStreamerResponse) {}
}

message FrameIteratorRequest {
    int32 command = 1;
    int64 span = 2;
    telem.PBTimeRange range = 3;
    int64 stamp = 4;
    repeated uint32 keys = 5;
}

message FrameIteratorResponse {
    int32 variant = 1;
    int32 command = 2;
    Frame frame = 3;
    int32 node_key = 43;
    bool ack = 5;
    int32 seq_num = 6;
    errors.PBPayload error = 7;
}

message FrameWriterConfig {
    repeated uint32 keys = 1;
    repeated uint32 authorities = 2;
    int64 start = 3;
    control.ControlSubject control_subject = 4;
    int32 mode = 5;
}

message FrameWriterRequest {
    int32 command = 1;
    FrameWriterConfig config = 2;
    Frame frame = 3;
}

message FrameWriterResponse {
    int32 command = 1;
    bool ack = 2;
    int32 node_key = 3;
    int32 counter = 4;
    errors.PBPayload error = 5;
    int64 end = 6;
}

message FrameStreamerRequest {
    int64 start = 1;
    repeated uint32 keys = 2;
}

message FrameStreamerResponse {
    Frame frame = 1;
    errors.PBPayload error = 2;
}
