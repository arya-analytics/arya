// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: telempb/telem.proto

#include "telempb/telem.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace telem {
        template <typename>
PROTOBUF_CONSTEXPR TimeRange::TimeRange(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.start_)*/ ::int64_t{0},
      /*decltype(_impl_.end_)*/ ::int64_t{0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TimeRangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TimeRangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TimeRangeDefaultTypeInternal() {}
  union {
    TimeRange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TimeRangeDefaultTypeInternal _TimeRange_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Series::Series(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.data_type_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.time_range_)*/ nullptr,
    } {}
struct SeriesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SeriesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SeriesDefaultTypeInternal() {}
  union {
    Series _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SeriesDefaultTypeInternal _Series_default_instance_;
}  // namespace telem
static ::_pb::Metadata file_level_metadata_telempb_2ftelem_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_telempb_2ftelem_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_telempb_2ftelem_2eproto = nullptr;
const ::uint32_t TableStruct_telempb_2ftelem_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::telem::TimeRange, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::telem::TimeRange, _impl_.start_),
    PROTOBUF_FIELD_OFFSET(::telem::TimeRange, _impl_.end_),
    PROTOBUF_FIELD_OFFSET(::telem::Series, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::telem::Series, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::telem::Series, _impl_.time_range_),
    PROTOBUF_FIELD_OFFSET(::telem::Series, _impl_.data_type_),
    PROTOBUF_FIELD_OFFSET(::telem::Series, _impl_.data_),
    0,
    ~0u,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::telem::TimeRange)},
        {10, 21, -1, sizeof(::telem::Series)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::telem::_TimeRange_default_instance_._instance,
    &::telem::_Series_default_instance_._instance,
};
const char descriptor_table_protodef_telempb_2ftelem_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\023telempb/telem.proto\022\005telem\"3\n\tTimeRang"
    "e\022\024\n\005start\030\001 \001(\003R\005start\022\020\n\003end\030\002 \001(\003R\003en"
    "d\"j\n\006Series\022/\n\ntime_range\030\001 \001(\0132\020.telem."
    "TimeRangeR\ttimeRange\022\033\n\tdata_type\030\002 \001(\tR"
    "\010dataType\022\022\n\004data\030\003 \001(\014R\004dataBt\n\tcom.tel"
    "emB\nTelemProtoP\001Z\'github.com/synnaxlabs/"
    "x/telempb/telempb\242\002\003TXX\252\002\005Telem\312\002\005Telem\342"
    "\002\021Telem\\GPBMetadata\352\002\005Telemb\006proto3"
};
static ::absl::once_flag descriptor_table_telempb_2ftelem_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_telempb_2ftelem_2eproto = {
    false,
    false,
    315,
    descriptor_table_protodef_telempb_2ftelem_2eproto,
    "telempb/telem.proto",
    &descriptor_table_telempb_2ftelem_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_telempb_2ftelem_2eproto::offsets,
    file_level_metadata_telempb_2ftelem_2eproto,
    file_level_enum_descriptors_telempb_2ftelem_2eproto,
    file_level_service_descriptors_telempb_2ftelem_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_telempb_2ftelem_2eproto_getter() {
  return &descriptor_table_telempb_2ftelem_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_telempb_2ftelem_2eproto(&descriptor_table_telempb_2ftelem_2eproto);
namespace telem {
// ===================================================================

class TimeRange::_Internal {
 public:
};

TimeRange::TimeRange(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:telem.TimeRange)
}
TimeRange::TimeRange(const TimeRange& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:telem.TimeRange)
}
inline void TimeRange::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.start_){::int64_t{0}},
      decltype(_impl_.end_){::int64_t{0}},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
TimeRange::~TimeRange() {
  // @@protoc_insertion_point(destructor:telem.TimeRange)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TimeRange::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void TimeRange::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TimeRange::Clear() {
// @@protoc_insertion_point(message_clear_start:telem.TimeRange)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.start_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.end_) -
      reinterpret_cast<char*>(&_impl_.start_)) + sizeof(_impl_.end_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TimeRange::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> TimeRange::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TimeRange_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int64 end = 2 [json_name = "end"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TimeRange, _impl_.end_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.end_)}},
    // int64 start = 1 [json_name = "start"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TimeRange, _impl_.start_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.start_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 start = 1 [json_name = "start"];
    {PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.start_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 end = 2 [json_name = "end"];
    {PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.end_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TimeRange::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:telem.TimeRange)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 start = 1 [json_name = "start"];
  if (this->_internal_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_start(), target);
  }

  // int64 end = 2 [json_name = "end"];
  if (this->_internal_end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_end(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:telem.TimeRange)
  return target;
}

::size_t TimeRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:telem.TimeRange)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 start = 1 [json_name = "start"];
  if (this->_internal_start() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_start());
  }

  // int64 end = 2 [json_name = "end"];
  if (this->_internal_end() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_end());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TimeRange::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TimeRange::MergeImpl
};
const ::google::protobuf::Message::ClassData*TimeRange::GetClassData() const { return &_class_data_; }


void TimeRange::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TimeRange*>(&to_msg);
  auto& from = static_cast<const TimeRange&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:telem.TimeRange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_start() != 0) {
    _this->_internal_set_start(from._internal_start());
  }
  if (from._internal_end() != 0) {
    _this->_internal_set_end(from._internal_end());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TimeRange::CopyFrom(const TimeRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:telem.TimeRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TimeRange::IsInitialized() const {
  return true;
}

void TimeRange::InternalSwap(TimeRange* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.end_)
      + sizeof(TimeRange::_impl_.end_)
      - PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.start_)>(
          reinterpret_cast<char*>(&_impl_.start_),
          reinterpret_cast<char*>(&other->_impl_.start_));
}

::google::protobuf::Metadata TimeRange::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_telempb_2ftelem_2eproto_getter, &descriptor_table_telempb_2ftelem_2eproto_once,
      file_level_metadata_telempb_2ftelem_2eproto[0]);
}
// ===================================================================

class Series::_Internal {
 public:
  using HasBits = decltype(std::declval<Series>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Series, _impl_._has_bits_);
  static const ::telem::TimeRange& time_range(const Series* msg);
  static void set_has_time_range(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::telem::TimeRange& Series::_Internal::time_range(const Series* msg) {
  return *msg->_impl_.time_range_;
}
Series::Series(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:telem.Series)
}
Series::Series(const Series& from) : ::google::protobuf::Message() {
  Series* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_type_){},
      decltype(_impl_.data_){},
      decltype(_impl_.time_range_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.data_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data_type().empty()) {
    _this->_impl_.data_type_.Set(from._internal_data_type(), _this->GetArenaForAllocation());
  }
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    _this->_impl_.data_.Set(from._internal_data(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.time_range_ = new ::telem::TimeRange(*from._impl_.time_range_);
  }

  // @@protoc_insertion_point(copy_constructor:telem.Series)
}
inline void Series::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_type_){},
      decltype(_impl_.data_){},
      decltype(_impl_.time_range_){nullptr},
  };
  _impl_.data_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Series::~Series() {
  // @@protoc_insertion_point(destructor:telem.Series)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Series::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_type_.Destroy();
  _impl_.data_.Destroy();
  if (this != internal_default_instance()) delete _impl_.time_range_;
}
void Series::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Series::Clear() {
// @@protoc_insertion_point(message_clear_start:telem.Series)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_type_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.time_range_ != nullptr);
    _impl_.time_range_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Series::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 30, 2> Series::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Series, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Series_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .telem.TimeRange time_range = 1 [json_name = "timeRange"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Series, _impl_.time_range_)}},
    // string data_type = 2 [json_name = "dataType"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Series, _impl_.data_type_)}},
    // bytes data = 3 [json_name = "data"];
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Series, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .telem.TimeRange time_range = 1 [json_name = "timeRange"];
    {PROTOBUF_FIELD_OFFSET(Series, _impl_.time_range_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string data_type = 2 [json_name = "dataType"];
    {PROTOBUF_FIELD_OFFSET(Series, _impl_.data_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes data = 3 [json_name = "data"];
    {PROTOBUF_FIELD_OFFSET(Series, _impl_.data_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::telem::TimeRange>()},
  }}, {{
    "\14\0\11\0\0\0\0\0"
    "telem.Series"
    "data_type"
  }},
};

::uint8_t* Series::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:telem.Series)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .telem.TimeRange time_range = 1 [json_name = "timeRange"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::time_range(this),
        _Internal::time_range(this).GetCachedSize(), target, stream);
  }

  // string data_type = 2 [json_name = "dataType"];
  if (!this->_internal_data_type().empty()) {
    const std::string& _s = this->_internal_data_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "telem.Series.data_type");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // bytes data = 3 [json_name = "data"];
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:telem.Series)
  return target;
}

::size_t Series::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:telem.Series)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string data_type = 2 [json_name = "dataType"];
  if (!this->_internal_data_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_data_type());
  }

  // bytes data = 3 [json_name = "data"];
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  // .telem.TimeRange time_range = 1 [json_name = "timeRange"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.time_range_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Series::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Series::MergeImpl
};
const ::google::protobuf::Message::ClassData*Series::GetClassData() const { return &_class_data_; }


void Series::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Series*>(&to_msg);
  auto& from = static_cast<const Series&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:telem.Series)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data_type().empty()) {
    _this->_internal_set_data_type(from._internal_data_type());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_time_range()->::telem::TimeRange::MergeFrom(
        from._internal_time_range());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Series::CopyFrom(const Series& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:telem.Series)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Series::IsInitialized() const {
  return true;
}

void Series::InternalSwap(Series* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_type_, lhs_arena,
                                       &other->_impl_.data_type_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, lhs_arena,
                                       &other->_impl_.data_, rhs_arena);
  swap(_impl_.time_range_, other->_impl_.time_range_);
}

::google::protobuf::Metadata Series::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_telempb_2ftelem_2eproto_getter, &descriptor_table_telempb_2ftelem_2eproto_once,
      file_level_metadata_telempb_2ftelem_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace telem
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
